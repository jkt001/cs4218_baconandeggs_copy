
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "" };
    java.io.InputStream inputStream3 = null;
    java.io.OutputStream outputStream4 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.run(str_array2, inputStream3, outputStream4);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CommException");
    } catch (sg.edu.nus.comp.cs4218.exception.CommException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CommException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CommException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }


    sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.io.InputStream inputStream3 = null;
    java.io.OutputStream outputStream4 = null;
    // The following exception was thrown during execution in test generation
    try {
      dateApplication0.run(str_array2, inputStream3, outputStream4);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException");
    } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.DateException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }


    java.lang.String str0 = sg.edu.nus.comp.cs4218.impl.app.CommApplication.EXP_FNF_EXCEPTION;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str0 + "' != '" + "File not found"+ "'", str0.equals("File not found"));

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }


    java.lang.String str0 = sg.edu.nus.comp.cs4218.impl.app.CommApplication.EXP_INVALID_ARGS;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str0 + "' != '" + "Invalid args"+ "'", str0.equals("Invalid args"));

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }


    sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
    java.util.Calendar calendar1 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = dateApplication0.formatDate(calendar1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.io.InputStream inputStream10 = null;
    java.io.OutputStream outputStream11 = null;
    // The following exception was thrown during execution in test generation
    try {
      calApplication0.run(str_array7, inputStream10, outputStream11);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException");
    } catch (sg.edu.nus.comp.cs4218.exception.CalException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CalException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commOnlyFirst(str_array7);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str10 = calApplication0.printCalForMonthYear(str_array7);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "comm: terminated with error message comm: File not found" };
    java.io.InputStream inputStream3 = null;
    java.io.OutputStream outputStream4 = null;
    // The following exception was thrown during execution in test generation
    try {
      calApplication0.run(str_array2, inputStream3, outputStream4);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException");
    } catch (sg.edu.nus.comp.cs4218.exception.CalException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CalException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }


    java.lang.String str0 = sg.edu.nus.comp.cs4218.impl.app.CommApplication.EXP_NULL_POINTER;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str0 + "' != '" + "Output stream is null"+ "'", str0.equals("Output stream is null"));

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    java.lang.String[] str_array1 = null;
    java.io.InputStream inputStream2 = null;
    java.io.OutputStream outputStream3 = null;
    // The following exception was thrown during execution in test generation
    try {
      calApplication0.run(str_array1, inputStream2, outputStream3);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException");
    } catch (sg.edu.nus.comp.cs4218.exception.CalException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CalException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String str11 = calApplication1.printCalWithMondayFirst(str_array8);
    java.io.InputStream inputStream12 = null;
    java.io.OutputStream outputStream13 = null;
    // The following exception was thrown during execution in test generation
    try {
      calApplication0.run(str_array8, inputStream12, outputStream13);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException");
    } catch (sg.edu.nus.comp.cs4218.exception.CalException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CalException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str11.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String str10 = calApplication0.printCalWithMondayFirst(str_array7);
    java.lang.String[] str_array11 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str12 = calApplication0.printCalForYearMondayFirst(str_array11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str10.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str10 = bcApplication0.or(str_array7);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.lang.String str5 = calApplication0.printCalWithMondayFirst(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.lang.String str14 = commApplication6.commBothMathches(str_array12);
    java.io.InputStream inputStream15 = null;
    java.io.OutputStream outputStream16 = null;
    // The following exception was thrown during execution in test generation
    try {
      calApplication0.run(str_array12, inputStream15, outputStream16);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException");
    } catch (sg.edu.nus.comp.cs4218.exception.CalException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CalException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str5.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str5 = bcApplication0.equalEqual(str_array3);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = bcApplication0.getPostfixExpression("comm: terminated with error message comm: File not found");
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str13 = bcApplication0.lessThanOrEqual(str_array11);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.lang.String str5 = calApplication0.printCalWithMondayFirst(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = commApplication6.commNoMatches(str_array16);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str20 = calApplication0.printCalForYear(str_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str5.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }


    sg.edu.nus.comp.cs4218.impl.app.TailApplication tailApplication0 = new sg.edu.nus.comp.cs4218.impl.app.TailApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.io.InputStream inputStream10 = null;
    java.io.OutputStream outputStream11 = null;
    // The following exception was thrown during execution in test generation
    try {
      tailApplication0.run(str_array7, inputStream10, outputStream11);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.TailException");
    } catch (sg.edu.nus.comp.cs4218.exception.TailException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.TailException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.TailException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n" };
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str3 = calApplication0.printCalForMonthYearMondayFirst(str_array2);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }


    sg.edu.nus.comp.cs4218.impl.app.HeadApplication headApplication0 = new sg.edu.nus.comp.cs4218.impl.app.HeadApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String str11 = calApplication1.printCalWithMondayFirst(str_array8);
    java.io.InputStream inputStream12 = null;
    java.io.OutputStream outputStream13 = null;
    // The following exception was thrown during execution in test generation
    try {
      headApplication0.run(str_array8, inputStream12, outputStream13);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException");
    } catch (sg.edu.nus.comp.cs4218.exception.HeadException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.HeadException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str11.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    java.lang.String[] str_array1 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = bcApplication0.lessThanOrEqual(str_array1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commOnlyFirst(str_array7);
    java.io.InputStream inputStream10 = null;
    java.io.OutputStream outputStream11 = null;
    // The following exception was thrown during execution in test generation
    try {
      bcApplication0.run(str_array7, inputStream10, outputStream11);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }


    sg.edu.nus.comp.cs4218.impl.app.TailApplication tailApplication0 = new sg.edu.nus.comp.cs4218.impl.app.TailApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String[] str_array12 = new java.lang.String[] { "File not found" };
    java.lang.String str13 = commApplication2.commOnlySecond(str_array12);
    java.lang.String str14 = calApplication1.printCalWithMondayFirst(str_array12);
    java.io.InputStream inputStream15 = null;
    java.io.OutputStream outputStream16 = null;
    // The following exception was thrown during execution in test generation
    try {
      tailApplication0.run(str_array12, inputStream15, outputStream16);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.TailException");
    } catch (sg.edu.nus.comp.cs4218.exception.TailException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.TailException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.TailException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str14.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str15 = bcApplication0.lessThanOrEqual(str_array11);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = calApplication15.printCalWithMondayFirst(str_array18);
    java.lang.String str21 = commApplication1.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String str35 = commApplication22.commNoMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = calApplication36.printCalWithMondayFirst(str_array39);
    java.lang.String str42 = commApplication22.commAllMatches(str_array39);
    java.lang.String str43 = commApplication1.commBothMathches(str_array39);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str44 = bcApplication0.multiply(str_array39);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str20.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str41.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = bcApplication0.getPostfixExpression("Output stream is null");
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String str11 = calApplication1.printCalWithMondayFirst(str_array8);
    java.io.InputStream inputStream12 = null;
    java.io.OutputStream outputStream13 = null;
    // The following exception was thrown during execution in test generation
    try {
      bcApplication0.run(str_array8, inputStream12, outputStream13);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str11.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String str11 = calApplication1.printCalWithMondayFirst(str_array8);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str12 = bcApplication0.subtract(str_array8);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str11.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }


    java.lang.String str0 = sg.edu.nus.comp.cs4218.impl.app.CommApplication.SINGLE_TAB;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str0 + "' != '" + "\t"+ "'", str0.equals("\t"));

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String str10 = calApplication0.printCalWithMondayFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    java.lang.String str19 = commApplication11.commBothMathches(str_array17);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str20 = calApplication0.printCalForMonthYear(str_array17);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str10.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }


    sg.edu.nus.comp.cs4218.impl.app.HeadApplication headApplication0 = new sg.edu.nus.comp.cs4218.impl.app.HeadApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.io.InputStream inputStream5 = null;
    java.io.OutputStream outputStream6 = null;
    // The following exception was thrown during execution in test generation
    try {
      headApplication0.run(str_array3, inputStream5, outputStream6);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException");
    } catch (sg.edu.nus.comp.cs4218.exception.HeadException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.HeadException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str10 = bcApplication0.and(str_array7);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str7 = bcApplication0.or(str_array4);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str15 = bcApplication0.notEqual(str_array11);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = calApplication15.printCalWithMondayFirst(str_array18);
    java.lang.String str21 = commApplication1.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String str35 = commApplication22.commNoMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = calApplication36.printCalWithMondayFirst(str_array39);
    java.lang.String str42 = commApplication22.commAllMatches(str_array39);
    java.lang.String str43 = commApplication1.commBothMathches(str_array39);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str44 = bcApplication0.divide(str_array39);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str20.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str41.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str5 = bcApplication0.and(str_array3);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = calApplication15.printCalWithMondayFirst(str_array18);
    java.lang.String str21 = commApplication1.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String str35 = commApplication22.commNoMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = calApplication36.printCalWithMondayFirst(str_array39);
    java.lang.String str42 = commApplication22.commAllMatches(str_array39);
    java.lang.String str43 = commApplication1.commBothMathches(str_array39);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str44 = bcApplication0.equalEqual(str_array39);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str20.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str41.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commBothMathches(str_array6);
    java.io.InputStream inputStream9 = null;
    java.io.InputStream inputStream10 = null;
    java.io.OutputStream outputStream11 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.comm(inputStream9, inputStream10, outputStream11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }


    sg.edu.nus.comp.cs4218.impl.app.FmtApplication fmtApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FmtApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.io.InputStream inputStream13 = null;
    java.io.OutputStream outputStream14 = null;
    // The following exception was thrown during execution in test generation
    try {
      fmtApplication0.run(str_array11, inputStream13, outputStream14);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException");
    } catch (sg.edu.nus.comp.cs4218.exception.FmtException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.FmtException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }


    sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.io.InputStream inputStream13 = null;
    java.io.OutputStream outputStream14 = null;
    // The following exception was thrown during execution in test generation
    try {
      dateApplication0.run(str_array11, inputStream13, outputStream14);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException");
    } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.DateException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }


    sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.io.InputStream inputStream5 = null;
    java.io.OutputStream outputStream6 = null;
    // The following exception was thrown during execution in test generation
    try {
      echoApplication0.run(str_array3, inputStream5, outputStream6);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException");
    } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.EchoException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = calApplication15.printCalWithMondayFirst(str_array18);
    java.lang.String str21 = commApplication1.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String str35 = commApplication22.commNoMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = calApplication36.printCalWithMondayFirst(str_array39);
    java.lang.String str42 = commApplication22.commAllMatches(str_array39);
    java.lang.String str43 = commApplication1.commBothMathches(str_array39);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str44 = bcApplication0.greaterThanOrEqual(str_array39);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str20.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str41.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array1 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.List list2 = sortApplication0.sortSimpleCapitalNumber(str_array1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }


    java.lang.String str0 = sg.edu.nus.comp.cs4218.impl.app.CommApplication.DOUBLE_TAB;
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str0 + "' != '" + "\t\t"+ "'", str0.equals("\t\t"));

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }


    sg.edu.nus.comp.cs4218.impl.app.FmtApplication fmtApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FmtApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commOnlyFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commOnlyFirst(str_array16);
    java.lang.String str19 = commApplication1.commBothMathches(str_array16);
    java.io.InputStream inputStream20 = null;
    java.io.OutputStream outputStream21 = null;
    // The following exception was thrown during execution in test generation
    try {
      fmtApplication0.run(str_array16, inputStream20, outputStream21);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException");
    } catch (sg.edu.nus.comp.cs4218.exception.FmtException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.FmtException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    java.lang.String[] str_array5 = new java.lang.String[] { "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n" };
    java.io.InputStream inputStream6 = null;
    java.io.OutputStream outputStream7 = null;
    // The following exception was thrown during execution in test generation
    try {
      sortApplication0.run(str_array5, inputStream6, outputStream7);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException");
    } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.SortException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.lang.String str5 = calApplication0.printCalWithMondayFirst(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.lang.String str14 = commApplication6.commBothMathches(str_array12);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str15 = calApplication0.printCalForMonthYearMondayFirst(str_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str5.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = commApplication17.commBothMathches(str_array23);
    java.lang.String[] str_array27 = new java.lang.String[] { "File not found" };
    java.lang.String str28 = commApplication17.commOnlySecond(str_array27);
    java.lang.String str29 = calApplication16.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = calApplication15.printCal(str_array27);
    java.lang.String str31 = commApplication1.commOnlyFirst(str_array27);
    java.util.List list32 = sortApplication0.sortSimpleNumbers(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication33 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.lang.String str39 = calApplication34.printCalWithMondayFirst(str_array37);
    java.util.List list40 = sortApplication33.numericalSortSimpleCapitalSpecialChars(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = commApplication42.commBothMathches(str_array48);
    java.lang.String str51 = calApplication41.printCalWithMondayFirst(str_array48);
    java.util.List list52 = sortApplication33.numericalSortSimpleCapitalNumber(str_array48);
    java.util.List list53 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.lang.String str66 = commApplication58.commBothMathches(str_array64);
    java.lang.String str67 = commApplication54.commNoMatches(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication68 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array71 = new java.lang.String[] { "hi!" };
    java.lang.String str72 = commApplication69.commAllMatches(str_array71);
    java.lang.String str73 = calApplication68.printCalWithMondayFirst(str_array71);
    java.lang.String str74 = commApplication54.commAllMatches(str_array71);
    java.util.List list75 = sortApplication0.numericalSortNumbers(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str30.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str39.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str51.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str66.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str73.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list75);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = bcApplication0.getPostfixExpression("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n");
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commBothMathches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commBothMathches(str_array20);
    java.lang.String str23 = commApplication10.commNoMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String[] str_array36 = new java.lang.String[] { "File not found" };
    java.lang.String str37 = commApplication26.commOnlySecond(str_array36);
    java.lang.String str38 = calApplication25.printCalWithMondayFirst(str_array36);
    java.lang.String str39 = calApplication24.printCal(str_array36);
    java.lang.String str40 = commApplication10.commOnlyFirst(str_array36);
    java.util.List list41 = sortApplication9.sortSimpleNumbers(str_array36);
    java.io.InputStream inputStream42 = null;
    java.io.OutputStream outputStream43 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.run(str_array36, inputStream42, outputStream43);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CommException");
    } catch (sg.edu.nus.comp.cs4218.exception.CommException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CommException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CommException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str38.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str39.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.lang.String str14 = commApplication6.commBothMathches(str_array12);
    java.lang.String str15 = commApplication2.commNoMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "File not found" };
    java.lang.String str29 = commApplication18.commOnlySecond(str_array28);
    java.lang.String str30 = calApplication17.printCalWithMondayFirst(str_array28);
    java.lang.String str31 = calApplication16.printCal(str_array28);
    java.lang.String str32 = commApplication2.commOnlyFirst(str_array28);
    java.util.List list33 = sortApplication1.sortSimpleNumbers(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication34 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array38 = new java.lang.String[] { "hi!" };
    java.lang.String str39 = commApplication36.commAllMatches(str_array38);
    java.lang.String str40 = calApplication35.printCalWithMondayFirst(str_array38);
    java.util.List list41 = sortApplication34.numericalSortSimpleCapitalSpecialChars(str_array38);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    java.lang.String str51 = commApplication43.commBothMathches(str_array49);
    java.lang.String str52 = calApplication42.printCalWithMondayFirst(str_array49);
    java.util.List list53 = sortApplication34.numericalSortSimpleCapitalNumber(str_array49);
    java.util.List list54 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array49);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str55 = bcApplication0.greaterThan(str_array49);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str31.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str40.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str52.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list54);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.sortCapitalNumbersSpecialChars(str_array7);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str10 = bcApplication0.notEqual(str_array7);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    java.lang.String[] str_array6 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str7 = bcApplication0.bracket(str_array6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String[] str_array12 = new java.lang.String[] { "File not found" };
    java.lang.String str13 = commApplication2.commOnlySecond(str_array12);
    java.lang.String str14 = calApplication1.printCalWithMondayFirst(str_array12);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str15 = bcApplication0.or(str_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str14.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.lang.String str14 = commApplication6.commBothMathches(str_array12);
    java.lang.String str15 = commApplication2.commNoMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "File not found" };
    java.lang.String str29 = commApplication18.commOnlySecond(str_array28);
    java.lang.String str30 = calApplication17.printCalWithMondayFirst(str_array28);
    java.lang.String str31 = calApplication16.printCal(str_array28);
    java.lang.String str32 = commApplication2.commOnlyFirst(str_array28);
    java.util.List list33 = sortApplication1.sortSimpleNumbers(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication34 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.util.List list37 = sortApplication34.sortAll(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.util.List list42 = sortApplication34.numericalSortNumbersSpecialChars(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    java.lang.String str52 = commApplication44.commBothMathches(str_array50);
    java.lang.String str53 = calApplication43.printCalWithMondayFirst(str_array50);
    java.util.List list54 = sortApplication34.sortSimpleSpecialChars(str_array50);
    java.util.List list55 = sortApplication1.sortSpecialChars(str_array50);
    java.lang.String str56 = bcApplication0.number(str_array50);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array59 = new java.lang.String[] { "hi!" };
    java.lang.String str60 = commApplication57.commAllMatches(str_array59);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.lang.String str64 = commApplication61.commAllMatches(str_array63);
    java.lang.String str65 = commApplication57.commOnlyFirst(str_array63);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array76 = new java.lang.String[] { "hi!" };
    java.lang.String str77 = commApplication74.commAllMatches(str_array76);
    java.lang.String str78 = commApplication70.commBothMathches(str_array76);
    java.lang.String str79 = commApplication66.commNoMatches(str_array76);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication80 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication81 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array83 = new java.lang.String[] { "hi!" };
    java.lang.String str84 = commApplication81.commAllMatches(str_array83);
    java.lang.String str85 = calApplication80.printCalWithMondayFirst(str_array83);
    java.lang.String str86 = commApplication66.commAllMatches(str_array83);
    java.lang.String str87 = commApplication57.commOnlyFirst(str_array83);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str88 = bcApplication0.greaterThanOrEqual(str_array83);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str31.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str52.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str53.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!"+ "'", str56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str77.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str79.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str85.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commOnlyFirst(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commOnlyFirst(str_array15);
    java.lang.String str18 = commApplication0.commBothMathches(str_array15);
    java.io.InputStream inputStream19 = null;
    java.io.InputStream inputStream20 = null;
    java.io.OutputStream outputStream21 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.comm(inputStream19, inputStream20, outputStream21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.io.InputStream inputStream13 = null;
    java.io.OutputStream outputStream14 = null;
    // The following exception was thrown during execution in test generation
    try {
      bcApplication0.run(str_array11, inputStream13, outputStream14);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.lang.String str12 = commApplication4.commBothMathches(str_array10);
    java.lang.String str13 = commApplication0.commNoMatches(str_array10);
    java.io.InputStream inputStream14 = null;
    java.io.InputStream inputStream15 = null;
    java.io.OutputStream outputStream16 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.comm(inputStream14, inputStream15, outputStream16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.lang.String str14 = commApplication6.commBothMathches(str_array12);
    java.lang.String str15 = commApplication2.commNoMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "File not found" };
    java.lang.String str29 = commApplication18.commOnlySecond(str_array28);
    java.lang.String str30 = calApplication17.printCalWithMondayFirst(str_array28);
    java.lang.String str31 = calApplication16.printCal(str_array28);
    java.lang.String str32 = commApplication2.commOnlyFirst(str_array28);
    java.util.List list33 = sortApplication1.sortSimpleNumbers(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication34 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.util.List list37 = sortApplication34.sortAll(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.util.List list42 = sortApplication34.numericalSortNumbersSpecialChars(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    java.lang.String str52 = commApplication44.commBothMathches(str_array50);
    java.lang.String str53 = calApplication43.printCalWithMondayFirst(str_array50);
    java.util.List list54 = sortApplication34.sortSimpleSpecialChars(str_array50);
    java.util.List list55 = sortApplication1.sortSpecialChars(str_array50);
    java.lang.String str56 = bcApplication0.number(str_array50);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication57 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array59 = new java.lang.String[] { "hi!" };
    java.util.List list60 = sortApplication57.sortAll(str_array59);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.lang.String str64 = commApplication61.commAllMatches(str_array63);
    java.util.List list65 = sortApplication57.numericalSortNumbersSpecialChars(str_array63);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str66 = bcApplication0.notEqual(str_array63);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str31.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str52.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str53.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "hi!"+ "'", str56.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication7 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!" };
    java.lang.String str10 = commApplication7.commAllMatches(str_array9);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    java.lang.String str15 = commApplication7.commBothMathches(str_array13);
    java.lang.String str16 = calApplication6.printCalWithMondayFirst(str_array13);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str17 = bcApplication0.multiply(str_array13);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str16.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }


    sg.edu.nus.comp.cs4218.impl.app.FmtApplication fmtApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FmtApplication();
    java.lang.String[] str_array1 = null;
    java.io.InputStream inputStream2 = null;
    java.io.OutputStream outputStream3 = null;
    // The following exception was thrown during execution in test generation
    try {
      fmtApplication0.run(str_array1, inputStream2, outputStream3);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException");
    } catch (sg.edu.nus.comp.cs4218.exception.FmtException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.FmtException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commOnlyFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commOnlyFirst(str_array16);
    java.lang.String str19 = commApplication1.commOnlySecond(str_array16);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str20 = bcApplication0.and(str_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication7 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!" };
    java.lang.String str10 = commApplication7.commAllMatches(str_array9);
    java.lang.String str11 = commApplication3.commOnlyFirst(str_array9);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication12 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = commApplication17.commBothMathches(str_array23);
    java.lang.String str26 = commApplication13.commNoMatches(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication28 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.lang.String str32 = commApplication29.commAllMatches(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = commApplication29.commBothMathches(str_array35);
    java.lang.String[] str_array39 = new java.lang.String[] { "File not found" };
    java.lang.String str40 = commApplication29.commOnlySecond(str_array39);
    java.lang.String str41 = calApplication28.printCalWithMondayFirst(str_array39);
    java.lang.String str42 = calApplication27.printCal(str_array39);
    java.lang.String str43 = commApplication13.commOnlyFirst(str_array39);
    java.util.List list44 = sortApplication12.sortSimpleNumbers(str_array39);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication45 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    java.lang.String str51 = calApplication46.printCalWithMondayFirst(str_array49);
    java.util.List list52 = sortApplication45.numericalSortSimpleCapitalSpecialChars(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication53 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    java.lang.String str62 = commApplication54.commBothMathches(str_array60);
    java.lang.String str63 = calApplication53.printCalWithMondayFirst(str_array60);
    java.util.List list64 = sortApplication45.numericalSortSimpleCapitalNumber(str_array60);
    java.util.List list65 = sortApplication12.numericalSortSimpleCapitalSpecialChars(str_array60);
    java.lang.String str66 = commApplication3.commOnlyFirst(str_array60);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str67 = bcApplication0.pow(str_array60);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str41.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str42.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str51.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str63.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str66.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.sortCapitalNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.util.List list12 = sortApplication9.sortAll(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.util.List list17 = sortApplication9.numericalSortNumbersSpecialChars(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "File not found" };
    java.lang.String str29 = commApplication18.commOnlySecond(str_array28);
    java.util.List list30 = sortApplication9.numericalSortStringsCapital(str_array28);
    java.util.List list31 = sortApplication0.sortSimpleCapitalNumber(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication32 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.lang.String str38 = calApplication33.printCalWithMondayFirst(str_array36);
    java.util.List list39 = sortApplication32.numericalSortSimpleCapitalSpecialChars(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array42 = new java.lang.String[] { "hi!" };
    java.lang.String str43 = commApplication40.commAllMatches(str_array42);
    java.util.List list44 = sortApplication32.numericalSortSimpleCapitalNumber(str_array42);
    java.lang.String[] str_array46 = new java.lang.String[] { "\t" };
    java.util.List list47 = sortApplication32.sortSimpleCapital(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication48 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.lang.String str54 = calApplication49.printCalWithMondayFirst(str_array52);
    java.util.List list55 = sortApplication48.numericalSortSimpleCapitalSpecialChars(str_array52);
    java.util.List list56 = sortApplication32.numericalSortStringsSimple(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication57 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication59 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array61 = new java.lang.String[] { "hi!" };
    java.lang.String str62 = commApplication59.commAllMatches(str_array61);
    java.lang.String str63 = calApplication58.printCalWithMondayFirst(str_array61);
    java.util.List list64 = sortApplication57.numericalSortSimpleCapitalSpecialChars(str_array61);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array67 = new java.lang.String[] { "hi!" };
    java.lang.String str68 = commApplication65.commAllMatches(str_array67);
    java.util.List list69 = sortApplication57.numericalSortSimpleCapitalNumber(str_array67);
    java.lang.String[] str_array71 = new java.lang.String[] { "\t" };
    java.util.List list72 = sortApplication57.sortSimpleCapital(str_array71);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication73 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    java.lang.String str79 = calApplication74.printCalWithMondayFirst(str_array77);
    java.util.List list80 = sortApplication73.numericalSortSimpleCapitalSpecialChars(str_array77);
    java.util.List list81 = sortApplication57.numericalSortStringsSimple(str_array77);
    java.util.List list82 = sortApplication32.numericalSortNumbers(str_array77);
    java.util.List list83 = sortApplication0.sortSimpleNumbers(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str38.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str54.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str63.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str79.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list83);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }


    sg.edu.nus.comp.cs4218.impl.app.HeadApplication headApplication0 = new sg.edu.nus.comp.cs4218.impl.app.HeadApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commOnlyFirst(str_array7);
    java.io.InputStream inputStream10 = null;
    java.io.OutputStream outputStream11 = null;
    // The following exception was thrown during execution in test generation
    try {
      headApplication0.run(str_array7, inputStream10, outputStream11);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException");
    } catch (sg.edu.nus.comp.cs4218.exception.HeadException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.HeadException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = commApplication6.commNoMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = calApplication20.printCalWithMondayFirst(str_array23);
    java.lang.String str26 = commApplication6.commAllMatches(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!" };
    java.lang.String str30 = commApplication27.commAllMatches(str_array29);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.lang.String str39 = commApplication31.commBothMathches(str_array37);
    java.lang.String str40 = commApplication27.commNoMatches(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.lang.String str46 = calApplication41.printCalWithMondayFirst(str_array44);
    java.lang.String str47 = commApplication27.commAllMatches(str_array44);
    java.lang.String str48 = commApplication6.commBothMathches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array51 = new java.lang.String[] { "hi!" };
    java.lang.String str52 = commApplication49.commAllMatches(str_array51);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication53 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array55 = new java.lang.String[] { "hi!" };
    java.lang.String str56 = commApplication53.commAllMatches(str_array55);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array59 = new java.lang.String[] { "hi!" };
    java.lang.String str60 = commApplication57.commAllMatches(str_array59);
    java.lang.String str61 = commApplication53.commBothMathches(str_array59);
    java.lang.String str62 = commApplication49.commNoMatches(str_array59);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication63 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication64 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array66 = new java.lang.String[] { "hi!" };
    java.lang.String str67 = commApplication64.commAllMatches(str_array66);
    java.lang.String str68 = calApplication63.printCalWithMondayFirst(str_array66);
    java.lang.String str69 = commApplication49.commAllMatches(str_array66);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array76 = new java.lang.String[] { "hi!" };
    java.lang.String str77 = commApplication74.commAllMatches(str_array76);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    java.lang.String str82 = commApplication74.commBothMathches(str_array80);
    java.lang.String str83 = commApplication70.commNoMatches(str_array80);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication84 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication85 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array87 = new java.lang.String[] { "hi!" };
    java.lang.String str88 = commApplication85.commAllMatches(str_array87);
    java.lang.String str89 = calApplication84.printCalWithMondayFirst(str_array87);
    java.lang.String str90 = commApplication70.commAllMatches(str_array87);
    java.lang.String str91 = commApplication49.commBothMathches(str_array87);
    java.lang.String str92 = commApplication6.commAllMatches(str_array87);
    java.lang.String str93 = bcApplication0.not(str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str25.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str46.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str52.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str68.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str77.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str88 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str88.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str89 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str89.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str90.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str91.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str92 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str92.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str93 + "' != '" + "0"+ "'", str93.equals("0"));

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String[] str_array12 = new java.lang.String[] { "File not found" };
    java.lang.String str13 = commApplication2.commOnlySecond(str_array12);
    java.lang.String str14 = calApplication1.printCalWithMondayFirst(str_array12);
    java.lang.String str15 = calApplication0.printCal(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication16 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = calApplication17.printCalWithMondayFirst(str_array20);
    java.util.List list23 = sortApplication16.numericalSortSimpleCapitalSpecialChars(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.util.List list28 = sortApplication16.numericalSortSimpleCapitalNumber(str_array26);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str29 = calApplication0.printCalForYear(str_array26);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str14.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str15.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str22.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.lang.String str5 = calApplication0.printCalWithMondayFirst(str_array3);
    java.lang.String[] str_array7 = new java.lang.String[] { "File not found" };
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str8 = calApplication0.printCalForMonthYearMondayFirst(str_array7);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str5.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commOnlyFirst(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commBothMathches(str_array20);
    java.lang.String str23 = commApplication10.commNoMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String[] str_array36 = new java.lang.String[] { "File not found" };
    java.lang.String str37 = commApplication26.commOnlySecond(str_array36);
    java.lang.String str38 = calApplication25.printCalWithMondayFirst(str_array36);
    java.lang.String str39 = calApplication24.printCal(str_array36);
    java.lang.String str40 = commApplication10.commOnlyFirst(str_array36);
    java.util.List list41 = sortApplication9.sortSimpleNumbers(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication42 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.lang.String str48 = calApplication43.printCalWithMondayFirst(str_array46);
    java.util.List list49 = sortApplication42.numericalSortSimpleCapitalSpecialChars(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = commApplication51.commBothMathches(str_array57);
    java.lang.String str60 = calApplication50.printCalWithMondayFirst(str_array57);
    java.util.List list61 = sortApplication42.numericalSortSimpleCapitalNumber(str_array57);
    java.util.List list62 = sortApplication9.numericalSortSimpleCapitalSpecialChars(str_array57);
    java.lang.String str63 = commApplication0.commOnlyFirst(str_array57);
    java.io.InputStream inputStream64 = null;
    java.io.InputStream inputStream65 = null;
    java.io.OutputStream outputStream66 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.comm(inputStream64, inputStream65, outputStream66);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str38.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str39.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str48.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str60.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }


    sg.edu.nus.comp.cs4218.impl.app.HeadApplication headApplication0 = new sg.edu.nus.comp.cs4218.impl.app.HeadApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.numericalSortNumbersSpecialChars(str_array7);
    java.io.InputStream inputStream10 = null;
    java.io.OutputStream outputStream11 = null;
    // The following exception was thrown during execution in test generation
    try {
      headApplication0.run(str_array7, inputStream10, outputStream11);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException");
    } catch (sg.edu.nus.comp.cs4218.exception.HeadException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.HeadException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.lang.String str13 = calApplication0.printCalWithMondayFirst(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication14 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication15 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.util.List list18 = sortApplication15.sortAll(str_array17);
    java.lang.String str19 = bcApplication14.bracket(str_array17);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str20 = calApplication0.printCalForMonthYear(str_array17);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str13.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "hi!"+ "'", str19.equals("hi!"));

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.sortCapitalNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commOnlyFirst(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.lang.String str30 = commApplication22.commBothMathches(str_array28);
    java.lang.String str31 = commApplication18.commNoMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.lang.String str38 = commApplication18.commAllMatches(str_array35);
    java.lang.String str39 = commApplication9.commOnlyFirst(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication9.commOnlySecond(str_array43);
    java.util.List list47 = sortApplication0.numericalSortSimpleNumbers(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication52 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.lang.String str55 = commApplication52.commAllMatches(str_array54);
    java.lang.String str56 = commApplication48.commOnlyFirst(str_array54);
    java.util.List list57 = sortApplication0.numericalSortSimpleNumbersSpecialChars(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list57);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }


    sg.edu.nus.comp.cs4218.impl.app.TailApplication tailApplication0 = new sg.edu.nus.comp.cs4218.impl.app.TailApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = calApplication9.printCalWithMondayFirst(str_array16);
    java.util.List list20 = sortApplication1.numericalSortSimpleCapitalNumber(str_array16);
    java.io.InputStream inputStream21 = null;
    java.io.OutputStream outputStream22 = null;
    // The following exception was thrown during execution in test generation
    try {
      tailApplication0.run(str_array16, inputStream21, outputStream22);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.TailException");
    } catch (sg.edu.nus.comp.cs4218.exception.TailException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.TailException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.TailException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = calApplication15.printCalWithMondayFirst(str_array18);
    java.lang.String str21 = commApplication1.commAllMatches(str_array18);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str22 = bcApplication0.or(str_array18);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str20.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.util.List list7 = sortApplication4.sortAll(str_array6);
    java.lang.String str8 = bcApplication3.bracket(str_array6);
    java.lang.String str9 = bcApplication0.not(str_array6);
    boolean b11 = bcApplication0.isValidOperator("0");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication12 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication13 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String str27 = commApplication14.commNoMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication28 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.lang.String str38 = commApplication30.commBothMathches(str_array36);
    java.lang.String[] str_array40 = new java.lang.String[] { "File not found" };
    java.lang.String str41 = commApplication30.commOnlySecond(str_array40);
    java.lang.String str42 = calApplication29.printCalWithMondayFirst(str_array40);
    java.lang.String str43 = calApplication28.printCal(str_array40);
    java.lang.String str44 = commApplication14.commOnlyFirst(str_array40);
    java.util.List list45 = sortApplication13.sortSimpleNumbers(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication46 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.util.List list49 = sortApplication46.sortAll(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.util.List list54 = sortApplication46.numericalSortNumbersSpecialChars(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication60 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array62 = new java.lang.String[] { "hi!" };
    java.lang.String str63 = commApplication60.commAllMatches(str_array62);
    java.lang.String str64 = commApplication56.commBothMathches(str_array62);
    java.lang.String str65 = calApplication55.printCalWithMondayFirst(str_array62);
    java.util.List list66 = sortApplication46.sortSimpleSpecialChars(str_array62);
    java.util.List list67 = sortApplication13.sortSpecialChars(str_array62);
    java.lang.String str68 = bcApplication12.number(str_array62);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str69 = bcApplication0.divide(str_array62);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0"+ "'", str9.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str42.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str43.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str65.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "hi!"+ "'", str68.equals("hi!"));

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    java.lang.String str7 = bcApplication0.calculate("hi!");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication12 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.lang.String str15 = commApplication12.commAllMatches(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = commApplication12.commBothMathches(str_array18);
    java.lang.String str21 = commApplication8.commNoMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.lang.String str26 = commApplication23.commAllMatches(str_array25);
    java.lang.String str27 = calApplication22.printCalWithMondayFirst(str_array25);
    java.lang.String str28 = commApplication8.commAllMatches(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.lang.String str32 = commApplication29.commAllMatches(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = commApplication33.commBothMathches(str_array39);
    java.lang.String str42 = commApplication29.commNoMatches(str_array39);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.lang.String str48 = calApplication43.printCalWithMondayFirst(str_array46);
    java.lang.String str49 = commApplication29.commAllMatches(str_array46);
    java.lang.String str50 = commApplication8.commBothMathches(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication59 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array61 = new java.lang.String[] { "hi!" };
    java.lang.String str62 = commApplication59.commAllMatches(str_array61);
    java.lang.String str63 = commApplication55.commBothMathches(str_array61);
    java.lang.String str64 = commApplication51.commNoMatches(str_array61);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    java.lang.String str70 = calApplication65.printCalWithMondayFirst(str_array68);
    java.lang.String str71 = commApplication51.commAllMatches(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication72 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!" };
    java.lang.String str75 = commApplication72.commAllMatches(str_array74);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication76 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array78 = new java.lang.String[] { "hi!" };
    java.lang.String str79 = commApplication76.commAllMatches(str_array78);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication80 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array82 = new java.lang.String[] { "hi!" };
    java.lang.String str83 = commApplication80.commAllMatches(str_array82);
    java.lang.String str84 = commApplication76.commBothMathches(str_array82);
    java.lang.String str85 = commApplication72.commNoMatches(str_array82);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication86 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication87 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array89 = new java.lang.String[] { "hi!" };
    java.lang.String str90 = commApplication87.commAllMatches(str_array89);
    java.lang.String str91 = calApplication86.printCalWithMondayFirst(str_array89);
    java.lang.String str92 = commApplication72.commAllMatches(str_array89);
    java.lang.String str93 = commApplication51.commBothMathches(str_array89);
    java.lang.String str94 = commApplication8.commAllMatches(str_array89);
    java.io.InputStream inputStream95 = null;
    java.io.OutputStream outputStream96 = null;
    // The following exception was thrown during execution in test generation
    try {
      bcApplication0.run(str_array89, inputStream95, outputStream96);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException");
    } catch (sg.edu.nus.comp.cs4218.exception.BcException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.BcException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.BcException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str27.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str48.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str70.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str71.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str79.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str85.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str90.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str91.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str92 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str92.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str93 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str93.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str94.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.numericalSortNumbersSpecialChars(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commBothMathches(str_array20);
    java.lang.String str23 = commApplication10.commNoMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.lang.String str29 = calApplication24.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = commApplication10.commAllMatches(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    java.lang.String str43 = commApplication35.commBothMathches(str_array41);
    java.lang.String str44 = commApplication31.commNoMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication45 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = calApplication45.printCalWithMondayFirst(str_array48);
    java.lang.String str51 = commApplication31.commAllMatches(str_array48);
    java.lang.String str52 = commApplication10.commBothMathches(str_array48);
    java.util.List list53 = sortApplication1.numericalSortCapitalSpecialChars(str_array48);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str54 = bcApplication0.equalEqual(str_array48);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str50.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str52.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.numericalSortNumbersSpecialChars(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commBothMathches(str_array20);
    java.lang.String str23 = commApplication10.commNoMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.lang.String str29 = calApplication24.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = commApplication10.commAllMatches(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    java.lang.String str43 = commApplication35.commBothMathches(str_array41);
    java.lang.String str44 = commApplication31.commNoMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication45 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = calApplication45.printCalWithMondayFirst(str_array48);
    java.lang.String str51 = commApplication31.commAllMatches(str_array48);
    java.lang.String str52 = commApplication10.commBothMathches(str_array48);
    java.util.List list53 = sortApplication1.numericalSortCapitalSpecialChars(str_array48);
    java.lang.String str54 = commApplication0.commAllMatches(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str50.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str52.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    java.lang.String str21 = commApplication13.commBothMathches(str_array19);
    java.lang.String str22 = commApplication9.commNoMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = calApplication23.printCalWithMondayFirst(str_array26);
    java.lang.String str29 = commApplication9.commAllMatches(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.lang.String str42 = commApplication34.commBothMathches(str_array40);
    java.lang.String str43 = commApplication30.commNoMatches(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication45 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array47 = new java.lang.String[] { "hi!" };
    java.lang.String str48 = commApplication45.commAllMatches(str_array47);
    java.lang.String str49 = calApplication44.printCalWithMondayFirst(str_array47);
    java.lang.String str50 = commApplication30.commAllMatches(str_array47);
    java.lang.String str51 = commApplication9.commBothMathches(str_array47);
    java.util.List list52 = sortApplication0.numericalSortCapitalSpecialChars(str_array47);
    java.lang.String[] str_array53 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.List list54 = sortApplication0.sortSimpleNumbers(str_array53);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str28.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str49.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.lang.String str12 = commApplication4.commBothMathches(str_array10);
    java.lang.String str13 = commApplication0.commNoMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    java.lang.String str19 = calApplication14.printCalWithMondayFirst(str_array17);
    java.lang.String str20 = commApplication0.commAllMatches(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.util.List list29 = sortApplication21.sortCapitalNumbersSpecialChars(str_array27);
    java.lang.String str30 = commApplication0.commOnlySecond(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.util.List list12 = sortApplication9.sortAll(str_array11);
    java.util.List list13 = sortApplication0.numericalSortNumbers(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commOnlyFirst(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.lang.String str26 = commApplication23.commAllMatches(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!" };
    java.lang.String str30 = commApplication27.commAllMatches(str_array29);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    java.lang.String str35 = commApplication27.commBothMathches(str_array33);
    java.lang.String str36 = commApplication23.commNoMatches(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.lang.String str42 = calApplication37.printCalWithMondayFirst(str_array40);
    java.lang.String str43 = commApplication23.commAllMatches(str_array40);
    java.lang.String str44 = commApplication14.commOnlyFirst(str_array40);
    java.util.List list45 = sortApplication0.sortStringsSimple(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str42.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list45);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }


    sg.edu.nus.comp.cs4218.impl.app.HeadApplication headApplication0 = new sg.edu.nus.comp.cs4218.impl.app.HeadApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.sortCapitalNumbersSpecialChars(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication10 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.util.List list13 = sortApplication10.sortAll(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.util.List list18 = sortApplication10.numericalSortNumbersSpecialChars(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication19 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!" };
    java.lang.String str22 = commApplication19.commAllMatches(str_array21);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.lang.String str26 = commApplication23.commAllMatches(str_array25);
    java.lang.String str27 = commApplication19.commBothMathches(str_array25);
    java.lang.String[] str_array29 = new java.lang.String[] { "File not found" };
    java.lang.String str30 = commApplication19.commOnlySecond(str_array29);
    java.util.List list31 = sortApplication10.numericalSortStringsCapital(str_array29);
    java.util.List list32 = sortApplication1.sortSimpleCapitalNumber(str_array29);
    java.io.InputStream inputStream33 = null;
    java.io.OutputStream outputStream34 = null;
    // The following exception was thrown during execution in test generation
    try {
      headApplication0.run(str_array29, inputStream33, outputStream34);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException");
    } catch (sg.edu.nus.comp.cs4218.exception.HeadException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.HeadException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.HeadException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.sortCapitalNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commOnlyFirst(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.lang.String str30 = commApplication22.commBothMathches(str_array28);
    java.lang.String str31 = commApplication18.commNoMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.lang.String str38 = commApplication18.commAllMatches(str_array35);
    java.lang.String str39 = commApplication9.commOnlyFirst(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication9.commOnlySecond(str_array43);
    java.util.List list47 = sortApplication0.numericalSortSimpleNumbers(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication48 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.lang.String str54 = calApplication49.printCalWithMondayFirst(str_array52);
    java.util.List list55 = sortApplication48.numericalSortSimpleCapitalSpecialChars(str_array52);
    java.util.List list56 = sortApplication0.numericalSortSimpleNumbersSpecialChars(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str54.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list56);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication8 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.util.List list12 = sortApplication9.sortAll(str_array11);
    java.lang.String str13 = bcApplication8.bracket(str_array11);
    java.lang.String str14 = commApplication4.commOnlySecond(str_array11);
    java.util.List list15 = sortApplication0.sortSimpleNumbers(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    java.lang.String str24 = commApplication16.commOnlyFirst(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication25 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.lang.String str38 = commApplication30.commBothMathches(str_array36);
    java.lang.String str39 = commApplication26.commNoMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = commApplication42.commBothMathches(str_array48);
    java.lang.String[] str_array52 = new java.lang.String[] { "File not found" };
    java.lang.String str53 = commApplication42.commOnlySecond(str_array52);
    java.lang.String str54 = calApplication41.printCalWithMondayFirst(str_array52);
    java.lang.String str55 = calApplication40.printCal(str_array52);
    java.lang.String str56 = commApplication26.commOnlyFirst(str_array52);
    java.util.List list57 = sortApplication25.sortSimpleNumbers(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication58 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication59 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication60 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array62 = new java.lang.String[] { "hi!" };
    java.lang.String str63 = commApplication60.commAllMatches(str_array62);
    java.lang.String str64 = calApplication59.printCalWithMondayFirst(str_array62);
    java.util.List list65 = sortApplication58.numericalSortSimpleCapitalSpecialChars(str_array62);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array73 = new java.lang.String[] { "hi!" };
    java.lang.String str74 = commApplication71.commAllMatches(str_array73);
    java.lang.String str75 = commApplication67.commBothMathches(str_array73);
    java.lang.String str76 = calApplication66.printCalWithMondayFirst(str_array73);
    java.util.List list77 = sortApplication58.numericalSortSimpleCapitalNumber(str_array73);
    java.util.List list78 = sortApplication25.numericalSortSimpleCapitalSpecialChars(str_array73);
    java.lang.String str79 = commApplication16.commOnlyFirst(str_array73);
    java.util.List list80 = sortApplication0.numericalSortStringsSimple(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!"+ "'", str13.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str54.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str55.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str64.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str76.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str79.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list80);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    java.util.List list7 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.util.List list12 = sortApplication0.numericalSortSimpleCapitalNumber(str_array10);
    java.lang.String[] str_array14 = new java.lang.String[] { "\t" };
    java.util.List list15 = sortApplication0.sortSimpleCapital(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "File not found" };
    java.lang.String str29 = commApplication18.commOnlySecond(str_array28);
    java.lang.String str30 = calApplication17.printCalWithMondayFirst(str_array28);
    java.lang.String str31 = calApplication16.printCal(str_array28);
    java.util.List list32 = sortApplication0.numericalSortNumbers(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication33 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.lang.String str46 = commApplication38.commBothMathches(str_array44);
    java.lang.String str47 = commApplication34.commNoMatches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    java.lang.String str58 = commApplication50.commBothMathches(str_array56);
    java.lang.String[] str_array60 = new java.lang.String[] { "File not found" };
    java.lang.String str61 = commApplication50.commOnlySecond(str_array60);
    java.lang.String str62 = calApplication49.printCalWithMondayFirst(str_array60);
    java.lang.String str63 = calApplication48.printCal(str_array60);
    java.lang.String str64 = commApplication34.commOnlyFirst(str_array60);
    java.util.List list65 = sortApplication33.sortSimpleNumbers(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication66 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication68 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array70 = new java.lang.String[] { "hi!" };
    java.lang.String str71 = commApplication68.commAllMatches(str_array70);
    java.lang.String str72 = calApplication67.printCalWithMondayFirst(str_array70);
    java.util.List list73 = sortApplication66.numericalSortSimpleCapitalSpecialChars(str_array70);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication79 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array81 = new java.lang.String[] { "hi!" };
    java.lang.String str82 = commApplication79.commAllMatches(str_array81);
    java.lang.String str83 = commApplication75.commBothMathches(str_array81);
    java.lang.String str84 = calApplication74.printCalWithMondayFirst(str_array81);
    java.util.List list85 = sortApplication66.numericalSortSimpleCapitalNumber(str_array81);
    java.util.List list86 = sortApplication33.numericalSortSimpleCapitalSpecialChars(str_array81);
    java.util.List list87 = sortApplication0.sortSpecialChars(str_array81);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication88 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array90 = new java.lang.String[] { "hi!" };
    java.lang.String str91 = commApplication88.commAllMatches(str_array90);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication92 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication93 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array95 = new java.lang.String[] { "hi!" };
    java.util.List list96 = sortApplication93.sortAll(str_array95);
    java.lang.String str97 = bcApplication92.bracket(str_array95);
    java.lang.String str98 = commApplication88.commOnlySecond(str_array95);
    java.util.List list99 = sortApplication0.numericalSortSimpleCapital(str_array95);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str31.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str62.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str63.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str71.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str72.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str84.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str91.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array95);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str97 + "' != '" + "hi!"+ "'", str97.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str98 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str98.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list99);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }


    sg.edu.nus.comp.cs4218.impl.app.DateApplication dateApplication0 = new sg.edu.nus.comp.cs4218.impl.app.DateApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.util.List list13 = sortApplication1.numericalSortSimpleCapitalNumber(str_array11);
    java.io.InputStream inputStream14 = null;
    java.io.OutputStream outputStream15 = null;
    // The following exception was thrown during execution in test generation
    try {
      dateApplication0.run(str_array11, inputStream14, outputStream15);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException");
    } catch (sg.edu.nus.comp.cs4218.exception.DateException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.DateException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.DateException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    java.lang.String str7 = bcApplication0.calculate("hi!");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication12 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.lang.String str15 = commApplication12.commAllMatches(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = commApplication12.commBothMathches(str_array18);
    java.lang.String str21 = commApplication8.commNoMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.lang.String str26 = commApplication23.commAllMatches(str_array25);
    java.lang.String str27 = calApplication22.printCalWithMondayFirst(str_array25);
    java.lang.String str28 = commApplication8.commAllMatches(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication29 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    java.lang.String str35 = calApplication30.printCalWithMondayFirst(str_array33);
    java.util.List list36 = sortApplication29.numericalSortSimpleCapitalSpecialChars(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.util.List list41 = sortApplication29.numericalSortSimpleCapitalNumber(str_array39);
    java.lang.String[] str_array43 = new java.lang.String[] { "\t" };
    java.util.List list44 = sortApplication29.sortSimpleCapital(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication45 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    java.lang.String str51 = calApplication46.printCalWithMondayFirst(str_array49);
    java.util.List list52 = sortApplication45.numericalSortSimpleCapitalSpecialChars(str_array49);
    java.util.List list53 = sortApplication29.numericalSortStringsSimple(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication54 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    java.lang.String str60 = calApplication55.printCalWithMondayFirst(str_array58);
    java.util.List list61 = sortApplication54.numericalSortSimpleCapitalSpecialChars(str_array58);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.util.List list66 = sortApplication54.numericalSortSimpleCapitalNumber(str_array64);
    java.lang.String[] str_array68 = new java.lang.String[] { "\t" };
    java.util.List list69 = sortApplication54.sortSimpleCapital(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication70 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication72 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!" };
    java.lang.String str75 = commApplication72.commAllMatches(str_array74);
    java.lang.String str76 = calApplication71.printCalWithMondayFirst(str_array74);
    java.util.List list77 = sortApplication70.numericalSortSimpleCapitalSpecialChars(str_array74);
    java.util.List list78 = sortApplication54.numericalSortStringsSimple(str_array74);
    java.util.List list79 = sortApplication29.numericalSortNumbers(str_array74);
    java.lang.String str80 = commApplication8.commAllMatches(str_array74);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str81 = bcApplication0.divide(str_array74);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str27.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str35.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str51.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str60.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str76.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str80 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str80.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commOnlyFirst(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commBothMathches(str_array20);
    java.lang.String str23 = commApplication10.commNoMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = commApplication26.commBothMathches(str_array32);
    java.lang.String[] str_array36 = new java.lang.String[] { "File not found" };
    java.lang.String str37 = commApplication26.commOnlySecond(str_array36);
    java.lang.String str38 = calApplication25.printCalWithMondayFirst(str_array36);
    java.lang.String str39 = calApplication24.printCal(str_array36);
    java.lang.String str40 = commApplication10.commOnlyFirst(str_array36);
    java.util.List list41 = sortApplication9.sortSimpleNumbers(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication42 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.lang.String str48 = calApplication43.printCalWithMondayFirst(str_array46);
    java.util.List list49 = sortApplication42.numericalSortSimpleCapitalSpecialChars(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = commApplication51.commBothMathches(str_array57);
    java.lang.String str60 = calApplication50.printCalWithMondayFirst(str_array57);
    java.util.List list61 = sortApplication42.numericalSortSimpleCapitalNumber(str_array57);
    java.util.List list62 = sortApplication9.numericalSortSimpleCapitalSpecialChars(str_array57);
    java.lang.String str63 = commApplication0.commOnlyFirst(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication64 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b66 = bcApplication64.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication67 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication68 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array70 = new java.lang.String[] { "hi!" };
    java.util.List list71 = sortApplication68.sortAll(str_array70);
    java.lang.String str72 = bcApplication67.bracket(str_array70);
    java.lang.String str73 = bcApplication64.not(str_array70);
    java.lang.String str74 = commApplication0.commOnlyFirst(str_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str38.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str39.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str48.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str60.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "hi!"+ "'", str72.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "0"+ "'", str73.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication7 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array9 = new java.lang.String[] { "hi!" };
    java.lang.String str10 = commApplication7.commAllMatches(str_array9);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    java.lang.String str15 = commApplication7.commBothMathches(str_array13);
    java.lang.String str16 = commApplication3.commNoMatches(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = calApplication17.printCalWithMondayFirst(str_array20);
    java.lang.String str23 = commApplication3.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication24 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.lang.String str30 = calApplication25.printCalWithMondayFirst(str_array28);
    java.util.List list31 = sortApplication24.numericalSortSimpleCapitalSpecialChars(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array34 = new java.lang.String[] { "hi!" };
    java.lang.String str35 = commApplication32.commAllMatches(str_array34);
    java.util.List list36 = sortApplication24.numericalSortSimpleCapitalNumber(str_array34);
    java.lang.String[] str_array38 = new java.lang.String[] { "\t" };
    java.util.List list39 = sortApplication24.sortSimpleCapital(str_array38);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication40 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.lang.String str46 = calApplication41.printCalWithMondayFirst(str_array44);
    java.util.List list47 = sortApplication40.numericalSortSimpleCapitalSpecialChars(str_array44);
    java.util.List list48 = sortApplication24.numericalSortStringsSimple(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication49 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    java.lang.String str55 = calApplication50.printCalWithMondayFirst(str_array53);
    java.util.List list56 = sortApplication49.numericalSortSimpleCapitalSpecialChars(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array59 = new java.lang.String[] { "hi!" };
    java.lang.String str60 = commApplication57.commAllMatches(str_array59);
    java.util.List list61 = sortApplication49.numericalSortSimpleCapitalNumber(str_array59);
    java.lang.String[] str_array63 = new java.lang.String[] { "\t" };
    java.util.List list64 = sortApplication49.sortSimpleCapital(str_array63);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication65 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    java.lang.String str71 = calApplication66.printCalWithMondayFirst(str_array69);
    java.util.List list72 = sortApplication65.numericalSortSimpleCapitalSpecialChars(str_array69);
    java.util.List list73 = sortApplication49.numericalSortStringsSimple(str_array69);
    java.util.List list74 = sortApplication24.numericalSortNumbers(str_array69);
    java.lang.String str75 = commApplication3.commAllMatches(str_array69);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication76 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication77 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array79 = new java.lang.String[] { "hi!" };
    java.lang.String str80 = commApplication77.commAllMatches(str_array79);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication81 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array83 = new java.lang.String[] { "hi!" };
    java.lang.String str84 = commApplication81.commAllMatches(str_array83);
    java.lang.String str85 = commApplication77.commBothMathches(str_array83);
    java.lang.String str86 = calApplication76.printCalWithMondayFirst(str_array83);
    java.lang.String str87 = commApplication3.commBothMathches(str_array83);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str88 = bcApplication0.lessThanOrEqual(str_array83);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str22.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str46.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str55.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str71.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str80 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str80.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str85.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str86.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commBothMathches(str_array6);
    java.lang.String[] str_array10 = new java.lang.String[] { "File not found" };
    java.lang.String str11 = commApplication0.commOnlySecond(str_array10);
    java.io.InputStream inputStream12 = null;
    java.io.InputStream inputStream13 = null;
    java.io.OutputStream outputStream14 = null;
    // The following exception was thrown during execution in test generation
    try {
      commApplication0.comm(inputStream12, inputStream13, outputStream14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }


    sg.edu.nus.comp.cs4218.impl.app.FmtApplication fmtApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FmtApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.numericalSortNumbersSpecialChars(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String[] str_array20 = new java.lang.String[] { "File not found" };
    java.lang.String str21 = commApplication10.commOnlySecond(str_array20);
    java.util.List list22 = sortApplication1.numericalSortStringsCapital(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication23 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication24 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.util.List list27 = sortApplication24.sortAll(str_array26);
    java.lang.String str28 = bcApplication23.bracket(str_array26);
    java.util.List list29 = sortApplication1.numericalSortNumbers(str_array26);
    java.io.InputStream inputStream30 = null;
    java.io.OutputStream outputStream31 = null;
    // The following exception was thrown during execution in test generation
    try {
      fmtApplication0.run(str_array26, inputStream30, outputStream31);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException");
    } catch (sg.edu.nus.comp.cs4218.exception.FmtException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.FmtException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!"+ "'", str28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commBothMathches(str_array15);
    java.lang.String[] str_array19 = new java.lang.String[] { "File not found" };
    java.lang.String str20 = commApplication9.commOnlySecond(str_array19);
    java.util.List list21 = sortApplication0.numericalSortStringsCapital(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication22 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication23 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.util.List list26 = sortApplication23.sortAll(str_array25);
    java.lang.String str27 = bcApplication22.bracket(str_array25);
    java.util.List list28 = sortApplication0.numericalSortNumbers(str_array25);
    java.lang.String[] str_array29 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.List list30 = sortApplication0.sortCapitalSpecialChars(str_array29);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!"+ "'", str27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.lang.String str12 = commApplication4.commBothMathches(str_array10);
    java.lang.String str13 = commApplication0.commNoMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    java.lang.String str24 = commApplication16.commBothMathches(str_array22);
    java.lang.String[] str_array26 = new java.lang.String[] { "File not found" };
    java.lang.String str27 = commApplication16.commOnlySecond(str_array26);
    java.lang.String str28 = calApplication15.printCalWithMondayFirst(str_array26);
    java.lang.String str29 = calApplication14.printCal(str_array26);
    java.lang.String str30 = commApplication0.commOnlyFirst(str_array26);
    java.lang.String[] str_array31 = null;
    java.lang.String str32 = commApplication0.commBothMathches(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str28.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str29.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: Invalid args"+ "'", str32.equals("comm: terminated with error message comm: Invalid args"));

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String[] str_array12 = new java.lang.String[] { "File not found" };
    java.lang.String str13 = commApplication2.commOnlySecond(str_array12);
    java.lang.String str14 = calApplication1.printCalWithMondayFirst(str_array12);
    java.lang.String str15 = calApplication0.printCal(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication16 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.util.List list19 = sortApplication16.sortAll(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    java.util.List list24 = sortApplication16.numericalSortNumbersSpecialChars(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication25 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.util.List list28 = sortApplication25.sortAll(str_array27);
    java.util.List list29 = sortApplication16.numericalSortNumbers(str_array27);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str30 = calApplication0.printCalForMonthYearMondayFirst(str_array27);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str14.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str15.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = commApplication17.commBothMathches(str_array23);
    java.lang.String[] str_array27 = new java.lang.String[] { "File not found" };
    java.lang.String str28 = commApplication17.commOnlySecond(str_array27);
    java.lang.String str29 = calApplication16.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = calApplication15.printCal(str_array27);
    java.lang.String str31 = commApplication1.commOnlyFirst(str_array27);
    java.util.List list32 = sortApplication0.sortSimpleNumbers(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication33 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.lang.String str39 = calApplication34.printCalWithMondayFirst(str_array37);
    java.util.List list40 = sortApplication33.numericalSortSimpleCapitalSpecialChars(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = commApplication42.commBothMathches(str_array48);
    java.lang.String str51 = calApplication41.printCalWithMondayFirst(str_array48);
    java.util.List list52 = sortApplication33.numericalSortSimpleCapitalNumber(str_array48);
    java.util.List list53 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication54 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    java.lang.String str60 = calApplication55.printCalWithMondayFirst(str_array58);
    java.util.List list61 = sortApplication54.numericalSortSimpleCapitalSpecialChars(str_array58);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.util.List list66 = sortApplication54.numericalSortSimpleCapitalNumber(str_array64);
    java.lang.String[] str_array68 = new java.lang.String[] { "\t" };
    java.util.List list69 = sortApplication54.sortSimpleCapital(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication70 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication72 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!" };
    java.lang.String str75 = commApplication72.commAllMatches(str_array74);
    java.lang.String str76 = calApplication71.printCalWithMondayFirst(str_array74);
    java.util.List list77 = sortApplication70.numericalSortSimpleCapitalSpecialChars(str_array74);
    java.util.List list78 = sortApplication54.numericalSortStringsSimple(str_array74);
    java.io.InputStream inputStream79 = null;
    java.io.OutputStream outputStream80 = null;
    // The following exception was thrown during execution in test generation
    try {
      sortApplication0.run(str_array74, inputStream79, outputStream80);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException");
    } catch (sg.edu.nus.comp.cs4218.exception.SortException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.SortException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.SortException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str30.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str39.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str51.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str60.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str76.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }


    sg.edu.nus.comp.cs4218.impl.app.FmtApplication fmtApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FmtApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = calApplication9.printCalWithMondayFirst(str_array16);
    java.util.List list20 = sortApplication1.numericalSortSimpleCapitalNumber(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.util.List list29 = sortApplication21.sortCapitalNumbersSpecialChars(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication30 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.util.List list33 = sortApplication30.sortAll(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.util.List list38 = sortApplication30.numericalSortNumbersSpecialChars(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    java.lang.String str47 = commApplication39.commBothMathches(str_array45);
    java.lang.String[] str_array49 = new java.lang.String[] { "File not found" };
    java.lang.String str50 = commApplication39.commOnlySecond(str_array49);
    java.util.List list51 = sortApplication30.numericalSortStringsCapital(str_array49);
    java.util.List list52 = sortApplication21.sortSimpleCapitalNumber(str_array49);
    java.util.List list53 = sortApplication1.sortSimpleCapitalNumber(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    java.lang.String str62 = commApplication54.commBothMathches(str_array60);
    java.lang.String[] str_array64 = new java.lang.String[] { "File not found" };
    java.lang.String str65 = commApplication54.commOnlySecond(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    java.lang.String str71 = calApplication66.printCalWithMondayFirst(str_array69);
    java.lang.String str72 = commApplication54.commNoMatches(str_array69);
    java.util.List list73 = sortApplication1.numericalSortSimpleCapital(str_array69);
    java.io.InputStream inputStream74 = null;
    java.io.OutputStream outputStream75 = null;
    // The following exception was thrown during execution in test generation
    try {
      fmtApplication0.run(str_array69, inputStream74, outputStream75);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException");
    } catch (sg.edu.nus.comp.cs4218.exception.FmtException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.FmtException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str71.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list73);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.lang.String str13 = calApplication0.printCalWithMondayFirst(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    java.lang.String str24 = commApplication16.commBothMathches(str_array22);
    java.lang.String[] str_array26 = new java.lang.String[] { "File not found" };
    java.lang.String str27 = commApplication16.commOnlySecond(str_array26);
    java.lang.String str28 = calApplication15.printCalWithMondayFirst(str_array26);
    java.lang.String str29 = calApplication14.printCal(str_array26);
    java.lang.String str30 = calApplication0.printCalWithMondayFirst(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication31 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.util.List list34 = sortApplication31.sortAll(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.util.List list39 = sortApplication31.sortCapitalNumbersSpecialChars(str_array37);
    java.lang.String str40 = calApplication0.printCalWithMondayFirst(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str13.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str28.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str29.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str40.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    java.io.InputStream inputStream9 = null;
    java.io.OutputStream outputStream10 = null;
    // The following exception was thrown during execution in test generation
    try {
      calApplication0.run(str_array5, inputStream9, outputStream10);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException");
    } catch (sg.edu.nus.comp.cs4218.exception.CalException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CalException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CalException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.sortCapitalNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commOnlyFirst(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.lang.String str30 = commApplication22.commBothMathches(str_array28);
    java.lang.String str31 = commApplication18.commNoMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.lang.String str38 = commApplication18.commAllMatches(str_array35);
    java.lang.String str39 = commApplication9.commOnlyFirst(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication9.commOnlySecond(str_array43);
    java.util.List list47 = sortApplication0.numericalSortSimpleNumbers(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication48 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.lang.String str54 = calApplication49.printCalWithMondayFirst(str_array52);
    java.util.List list55 = sortApplication48.numericalSortSimpleCapitalSpecialChars(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    java.util.List list60 = sortApplication48.numericalSortSimpleCapitalNumber(str_array58);
    java.lang.String[] str_array62 = new java.lang.String[] { "\t" };
    java.util.List list63 = sortApplication48.sortSimpleCapital(str_array62);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication64 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    java.lang.String str70 = calApplication65.printCalWithMondayFirst(str_array68);
    java.util.List list71 = sortApplication64.numericalSortSimpleCapitalSpecialChars(str_array68);
    java.util.List list72 = sortApplication48.numericalSortStringsSimple(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication73 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    java.lang.String str79 = calApplication74.printCalWithMondayFirst(str_array77);
    java.util.List list80 = sortApplication73.numericalSortSimpleCapitalSpecialChars(str_array77);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication81 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array83 = new java.lang.String[] { "hi!" };
    java.lang.String str84 = commApplication81.commAllMatches(str_array83);
    java.util.List list85 = sortApplication73.numericalSortSimpleCapitalNumber(str_array83);
    java.lang.String[] str_array87 = new java.lang.String[] { "\t" };
    java.util.List list88 = sortApplication73.sortSimpleCapital(str_array87);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication89 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication90 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication91 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array93 = new java.lang.String[] { "hi!" };
    java.lang.String str94 = commApplication91.commAllMatches(str_array93);
    java.lang.String str95 = calApplication90.printCalWithMondayFirst(str_array93);
    java.util.List list96 = sortApplication89.numericalSortSimpleCapitalSpecialChars(str_array93);
    java.util.List list97 = sortApplication73.numericalSortStringsSimple(str_array93);
    java.util.List list98 = sortApplication48.numericalSortNumbers(str_array93);
    java.util.List list99 = sortApplication0.sortSimpleCapitalSpecialChars(str_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str54.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str70.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str79.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str94.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str95.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list96);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list97);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list98);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list99);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.util.List list7 = sortApplication4.sortAll(str_array6);
    java.lang.String str8 = bcApplication3.bracket(str_array6);
    java.lang.String str9 = bcApplication0.not(str_array6);
    boolean b11 = bcApplication0.isValidOperator("0");
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication12 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.util.List list15 = sortApplication12.sortAll(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.util.List list20 = sortApplication12.numericalSortNumbersSpecialChars(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    java.util.List list25 = sortApplication12.numericalSortNumbers(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.lang.String str38 = commApplication30.commBothMathches(str_array36);
    java.lang.String str39 = commApplication26.commNoMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication26.commAllMatches(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = commApplication51.commBothMathches(str_array57);
    java.lang.String str60 = commApplication47.commNoMatches(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.lang.String str66 = calApplication61.printCalWithMondayFirst(str_array64);
    java.lang.String str67 = commApplication47.commAllMatches(str_array64);
    java.lang.String str68 = commApplication26.commBothMathches(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    java.lang.String str74 = calApplication69.printCalWithMondayFirst(str_array72);
    java.lang.String str75 = commApplication26.commBothMathches(str_array72);
    java.util.List list76 = sortApplication12.numericalSortSimpleNumbersSpecialChars(str_array72);
    java.lang.String str77 = bcApplication0.not(str_array72);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication82 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array84 = new java.lang.String[] { "hi!" };
    java.lang.String str85 = commApplication82.commAllMatches(str_array84);
    java.lang.String str86 = commApplication78.commOnlyFirst(str_array84);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication87 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array89 = new java.lang.String[] { "hi!" };
    java.lang.String str90 = commApplication87.commAllMatches(str_array89);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication91 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array93 = new java.lang.String[] { "hi!" };
    java.lang.String str94 = commApplication91.commAllMatches(str_array93);
    java.lang.String str95 = commApplication87.commOnlyFirst(str_array93);
    java.lang.String str96 = commApplication78.commBothMathches(str_array93);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str97 = bcApplication0.lessThan(str_array93);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0"+ "'", str9.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str66.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str74.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "0"+ "'", str77.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str85.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str90.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str94.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str95.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str96 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str96.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.util.List list7 = sortApplication4.sortAll(str_array6);
    java.lang.String str8 = bcApplication3.bracket(str_array6);
    java.lang.String str9 = bcApplication0.not(str_array6);
    boolean b11 = bcApplication0.isValidOperator("0");
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication12 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = calApplication13.printCalWithMondayFirst(str_array16);
    java.util.List list19 = sortApplication12.numericalSortSimpleCapitalSpecialChars(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.lang.String str29 = commApplication21.commBothMathches(str_array27);
    java.lang.String str30 = calApplication20.printCalWithMondayFirst(str_array27);
    java.util.List list31 = sortApplication12.numericalSortSimpleCapitalNumber(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication32 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array34 = new java.lang.String[] { "hi!" };
    java.util.List list35 = sortApplication32.sortAll(str_array34);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array38 = new java.lang.String[] { "hi!" };
    java.lang.String str39 = commApplication36.commAllMatches(str_array38);
    java.util.List list40 = sortApplication32.sortCapitalNumbersSpecialChars(str_array38);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication41 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.util.List list44 = sortApplication41.sortAll(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication45 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array47 = new java.lang.String[] { "hi!" };
    java.lang.String str48 = commApplication45.commAllMatches(str_array47);
    java.util.List list49 = sortApplication41.numericalSortNumbersSpecialChars(str_array47);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    java.lang.String str58 = commApplication50.commBothMathches(str_array56);
    java.lang.String[] str_array60 = new java.lang.String[] { "File not found" };
    java.lang.String str61 = commApplication50.commOnlySecond(str_array60);
    java.util.List list62 = sortApplication41.numericalSortStringsCapital(str_array60);
    java.util.List list63 = sortApplication32.sortSimpleCapitalNumber(str_array60);
    java.util.List list64 = sortApplication12.sortSimpleCapitalNumber(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array67 = new java.lang.String[] { "hi!" };
    java.lang.String str68 = commApplication65.commAllMatches(str_array67);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array71 = new java.lang.String[] { "hi!" };
    java.lang.String str72 = commApplication69.commAllMatches(str_array71);
    java.lang.String str73 = commApplication65.commOnlyFirst(str_array71);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array76 = new java.lang.String[] { "hi!" };
    java.lang.String str77 = commApplication74.commAllMatches(str_array76);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication82 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array84 = new java.lang.String[] { "hi!" };
    java.lang.String str85 = commApplication82.commAllMatches(str_array84);
    java.lang.String str86 = commApplication78.commBothMathches(str_array84);
    java.lang.String str87 = commApplication74.commNoMatches(str_array84);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication88 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication89 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array91 = new java.lang.String[] { "hi!" };
    java.lang.String str92 = commApplication89.commAllMatches(str_array91);
    java.lang.String str93 = calApplication88.printCalWithMondayFirst(str_array91);
    java.lang.String str94 = commApplication74.commAllMatches(str_array91);
    java.lang.String str95 = commApplication65.commOnlyFirst(str_array91);
    java.util.List list96 = sortApplication12.sortNumbersSpecialChars(str_array91);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str97 = bcApplication0.pow(str_array91);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0"+ "'", str9.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str18.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str77.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str85.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str92 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str92.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str93 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str93.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str94.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str95.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list96);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication4 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication5 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.util.List list8 = sortApplication5.sortAll(str_array7);
    java.lang.String str9 = bcApplication4.bracket(str_array7);
    java.lang.String str10 = commApplication0.commOnlySecond(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication11 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.util.List list14 = sortApplication11.sortAll(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    java.util.List list19 = sortApplication11.numericalSortNumbersSpecialChars(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = commApplication20.commBothMathches(str_array26);
    java.lang.String[] str_array30 = new java.lang.String[] { "File not found" };
    java.lang.String str31 = commApplication20.commOnlySecond(str_array30);
    java.util.List list32 = sortApplication11.numericalSortStringsCapital(str_array30);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication33 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication34 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.util.List list37 = sortApplication34.sortAll(str_array36);
    java.lang.String str38 = bcApplication33.bracket(str_array36);
    java.util.List list39 = sortApplication11.numericalSortNumbers(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication40 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array42 = new java.lang.String[] { "hi!" };
    java.util.List list43 = sortApplication40.sortAll(str_array42);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.util.List list48 = sortApplication40.numericalSortNumbersSpecialChars(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication49 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array51 = new java.lang.String[] { "hi!" };
    java.util.List list52 = sortApplication49.sortAll(str_array51);
    java.util.List list53 = sortApplication40.numericalSortNumbers(str_array51);
    java.util.List list54 = sortApplication11.numericalSortSimpleCapitalSpecialChars(str_array51);
    java.lang.String str55 = commApplication0.commOnlyFirst(str_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!"+ "'", str9.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!"+ "'", str38.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = commApplication17.commBothMathches(str_array23);
    java.lang.String[] str_array27 = new java.lang.String[] { "File not found" };
    java.lang.String str28 = commApplication17.commOnlySecond(str_array27);
    java.lang.String str29 = calApplication16.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = calApplication15.printCal(str_array27);
    java.lang.String str31 = commApplication1.commOnlyFirst(str_array27);
    java.util.List list32 = sortApplication0.sortSimpleNumbers(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication33 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.lang.String str39 = calApplication34.printCalWithMondayFirst(str_array37);
    java.util.List list40 = sortApplication33.numericalSortSimpleCapitalSpecialChars(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = commApplication42.commBothMathches(str_array48);
    java.lang.String str51 = calApplication41.printCalWithMondayFirst(str_array48);
    java.util.List list52 = sortApplication33.numericalSortSimpleCapitalNumber(str_array48);
    java.util.List list53 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.lang.String str66 = commApplication58.commBothMathches(str_array64);
    java.lang.String str67 = commApplication54.commNoMatches(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication68 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array71 = new java.lang.String[] { "hi!" };
    java.lang.String str72 = commApplication69.commAllMatches(str_array71);
    java.lang.String str73 = calApplication68.printCalWithMondayFirst(str_array71);
    java.lang.String str74 = commApplication54.commAllMatches(str_array71);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication79 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array81 = new java.lang.String[] { "hi!" };
    java.lang.String str82 = commApplication79.commAllMatches(str_array81);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication83 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array85 = new java.lang.String[] { "hi!" };
    java.lang.String str86 = commApplication83.commAllMatches(str_array85);
    java.lang.String str87 = commApplication79.commBothMathches(str_array85);
    java.lang.String str88 = commApplication75.commNoMatches(str_array85);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication89 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication90 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array92 = new java.lang.String[] { "hi!" };
    java.lang.String str93 = commApplication90.commAllMatches(str_array92);
    java.lang.String str94 = calApplication89.printCalWithMondayFirst(str_array92);
    java.lang.String str95 = commApplication75.commAllMatches(str_array92);
    java.lang.String str96 = commApplication54.commBothMathches(str_array92);
    java.util.List list97 = sortApplication0.numericalSortCapitalNumbersSpecialChars(str_array92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str30.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str39.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str51.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str66.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str73.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str88 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str88.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str93 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str93.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str94.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str95.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str96 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str96.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list97);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = commApplication17.commBothMathches(str_array23);
    java.lang.String[] str_array27 = new java.lang.String[] { "File not found" };
    java.lang.String str28 = commApplication17.commOnlySecond(str_array27);
    java.lang.String str29 = calApplication16.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = calApplication15.printCal(str_array27);
    java.lang.String str31 = commApplication1.commOnlyFirst(str_array27);
    java.lang.String str32 = bcApplication0.number(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication33 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.lang.String str39 = calApplication34.printCalWithMondayFirst(str_array37);
    java.util.List list40 = sortApplication33.numericalSortSimpleCapitalSpecialChars(str_array37);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str41 = bcApplication0.lessThanOrEqual(str_array37);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str30.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "File not found"+ "'", str32.equals("File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str39.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    java.util.List list7 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.util.List list12 = sortApplication0.numericalSortSimpleCapitalNumber(str_array10);
    java.lang.String[] str_array14 = new java.lang.String[] { "\t" };
    java.util.List list15 = sortApplication0.sortSimpleCapital(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication16 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = calApplication17.printCalWithMondayFirst(str_array20);
    java.util.List list23 = sortApplication16.numericalSortSimpleCapitalSpecialChars(str_array20);
    java.util.List list24 = sortApplication0.numericalSortStringsSimple(str_array20);
    java.lang.String[] str_array26 = new java.lang.String[] { "Output stream is null" };
    java.util.List list27 = sortApplication0.sortSimpleCapitalSpecialChars(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication28 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array30 = new java.lang.String[] { "hi!" };
    java.lang.String str31 = commApplication28.commAllMatches(str_array30);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array34 = new java.lang.String[] { "hi!" };
    java.lang.String str35 = commApplication32.commAllMatches(str_array34);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array38 = new java.lang.String[] { "hi!" };
    java.lang.String str39 = commApplication36.commAllMatches(str_array38);
    java.lang.String str40 = commApplication32.commBothMathches(str_array38);
    java.lang.String str41 = commApplication28.commNoMatches(str_array38);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    java.lang.String str47 = calApplication42.printCalWithMondayFirst(str_array45);
    java.lang.String str48 = commApplication28.commAllMatches(str_array45);
    java.util.List list49 = sortApplication0.numericalSortCapitalNumbersSpecialChars(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str22.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str47.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.lang.String str12 = commApplication4.commBothMathches(str_array10);
    java.lang.String str13 = commApplication0.commNoMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    java.lang.String str19 = calApplication14.printCalWithMondayFirst(str_array17);
    java.lang.String str20 = commApplication0.commAllMatches(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.lang.String str26 = commApplication23.commAllMatches(str_array25);
    java.lang.String str27 = calApplication22.printCalWithMondayFirst(str_array25);
    java.util.List list28 = sortApplication21.numericalSortSimpleCapitalSpecialChars(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.lang.String str32 = commApplication29.commAllMatches(str_array31);
    java.util.List list33 = sortApplication21.numericalSortSimpleCapitalNumber(str_array31);
    java.lang.String[] str_array35 = new java.lang.String[] { "\t" };
    java.util.List list36 = sortApplication21.sortSimpleCapital(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication37 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    java.lang.String str43 = calApplication38.printCalWithMondayFirst(str_array41);
    java.util.List list44 = sortApplication37.numericalSortSimpleCapitalSpecialChars(str_array41);
    java.util.List list45 = sortApplication21.numericalSortStringsSimple(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication46 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    java.lang.String str52 = calApplication47.printCalWithMondayFirst(str_array50);
    java.util.List list53 = sortApplication46.numericalSortSimpleCapitalSpecialChars(str_array50);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    java.util.List list58 = sortApplication46.numericalSortSimpleCapitalNumber(str_array56);
    java.lang.String[] str_array60 = new java.lang.String[] { "\t" };
    java.util.List list61 = sortApplication46.sortSimpleCapital(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication62 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication63 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication64 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array66 = new java.lang.String[] { "hi!" };
    java.lang.String str67 = commApplication64.commAllMatches(str_array66);
    java.lang.String str68 = calApplication63.printCalWithMondayFirst(str_array66);
    java.util.List list69 = sortApplication62.numericalSortSimpleCapitalSpecialChars(str_array66);
    java.util.List list70 = sortApplication46.numericalSortStringsSimple(str_array66);
    java.util.List list71 = sortApplication21.numericalSortNumbers(str_array66);
    java.lang.String str72 = commApplication0.commAllMatches(str_array66);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication73 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array76 = new java.lang.String[] { "hi!" };
    java.lang.String str77 = commApplication74.commAllMatches(str_array76);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    java.lang.String str82 = commApplication74.commBothMathches(str_array80);
    java.lang.String str83 = calApplication73.printCalWithMondayFirst(str_array80);
    java.lang.String str84 = commApplication0.commBothMathches(str_array80);
    java.lang.String[] str_array85 = null;
    java.lang.String str86 = commApplication0.commBothMathches(str_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str27.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str43.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str52.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str68.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str77.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str83.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: Invalid args"+ "'", str86.equals("comm: terminated with error message comm: Invalid args"));

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    java.util.List list7 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.util.List list12 = sortApplication0.numericalSortSimpleCapitalNumber(str_array10);
    java.lang.String[] str_array14 = new java.lang.String[] { "\t" };
    java.util.List list15 = sortApplication0.sortSimpleCapital(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "File not found" };
    java.lang.String str29 = commApplication18.commOnlySecond(str_array28);
    java.lang.String str30 = calApplication17.printCalWithMondayFirst(str_array28);
    java.lang.String str31 = calApplication16.printCal(str_array28);
    java.util.List list32 = sortApplication0.numericalSortNumbers(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = commApplication33.commOnlyFirst(str_array39);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.lang.String str54 = commApplication46.commBothMathches(str_array52);
    java.lang.String str55 = commApplication42.commNoMatches(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array59 = new java.lang.String[] { "hi!" };
    java.lang.String str60 = commApplication57.commAllMatches(str_array59);
    java.lang.String str61 = calApplication56.printCalWithMondayFirst(str_array59);
    java.lang.String str62 = commApplication42.commAllMatches(str_array59);
    java.lang.String str63 = commApplication33.commOnlyFirst(str_array59);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication64 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array67 = new java.lang.String[] { "hi!" };
    java.lang.String str68 = commApplication65.commAllMatches(str_array67);
    java.lang.String str69 = calApplication64.printCalWithMondayFirst(str_array67);
    java.lang.String str70 = commApplication33.commOnlySecond(str_array67);
    java.util.List list71 = sortApplication0.numericalSortSpecialChars(str_array67);
    java.lang.String[] str_array72 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.List list73 = sortApplication0.numericalSortAll(str_array72);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str31.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str61.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str69.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list71);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.lang.String str13 = commApplication5.commBothMathches(str_array11);
    java.lang.String str14 = commApplication1.commNoMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    java.lang.String str25 = commApplication17.commBothMathches(str_array23);
    java.lang.String[] str_array27 = new java.lang.String[] { "File not found" };
    java.lang.String str28 = commApplication17.commOnlySecond(str_array27);
    java.lang.String str29 = calApplication16.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = calApplication15.printCal(str_array27);
    java.lang.String str31 = commApplication1.commOnlyFirst(str_array27);
    java.lang.String str32 = bcApplication0.number(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication33 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.util.List list36 = sortApplication33.sortAll(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.util.List list41 = sortApplication33.sortCapitalNumbersSpecialChars(str_array39);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication42 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.util.List list45 = sortApplication42.sortAll(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.util.List list50 = sortApplication42.numericalSortNumbersSpecialChars(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = commApplication51.commBothMathches(str_array57);
    java.lang.String[] str_array61 = new java.lang.String[] { "File not found" };
    java.lang.String str62 = commApplication51.commOnlySecond(str_array61);
    java.util.List list63 = sortApplication42.numericalSortStringsCapital(str_array61);
    java.util.List list64 = sortApplication33.sortSimpleCapitalNumber(str_array61);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str65 = bcApplication0.divide(str_array61);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str30.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "File not found"+ "'", str32.equals("File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.lang.String str5 = calApplication0.printCalWithMondayFirst(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication6 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.util.List list9 = sortApplication6.sortAll(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.util.List list14 = sortApplication6.numericalSortNumbersSpecialChars(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication15 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.util.List list18 = sortApplication15.sortAll(str_array17);
    java.util.List list19 = sortApplication6.numericalSortNumbers(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = commApplication20.commBothMathches(str_array26);
    java.lang.String[] str_array30 = new java.lang.String[] { "File not found" };
    java.lang.String str31 = commApplication20.commOnlySecond(str_array30);
    java.util.List list32 = sortApplication6.numericalSortSimpleSpecialChars(str_array30);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str33 = calApplication0.printCalForMonthYearMondayFirst(str_array30);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str5.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication12 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.lang.String str15 = commApplication12.commAllMatches(str_array14);
    java.lang.String str16 = commApplication8.commBothMathches(str_array14);
    java.lang.String str17 = commApplication4.commNoMatches(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication19 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = commApplication20.commBothMathches(str_array26);
    java.lang.String[] str_array30 = new java.lang.String[] { "File not found" };
    java.lang.String str31 = commApplication20.commOnlySecond(str_array30);
    java.lang.String str32 = calApplication19.printCalWithMondayFirst(str_array30);
    java.lang.String str33 = calApplication18.printCal(str_array30);
    java.lang.String str34 = commApplication4.commOnlyFirst(str_array30);
    java.lang.String str35 = bcApplication3.number(str_array30);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str36 = bcApplication0.add(str_array30);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str32.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str33.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "File not found"+ "'", str35.equals("File not found"));

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.util.List list7 = sortApplication4.sortAll(str_array6);
    java.lang.String str8 = bcApplication3.bracket(str_array6);
    java.lang.String str9 = bcApplication0.not(str_array6);
    boolean b11 = bcApplication0.isValidOperator("0");
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication12 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.util.List list15 = sortApplication12.sortAll(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.util.List list20 = sortApplication12.numericalSortNumbersSpecialChars(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    java.util.List list25 = sortApplication12.numericalSortNumbers(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.lang.String str38 = commApplication30.commBothMathches(str_array36);
    java.lang.String str39 = commApplication26.commNoMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication26.commAllMatches(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = commApplication51.commBothMathches(str_array57);
    java.lang.String str60 = commApplication47.commNoMatches(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.lang.String str66 = calApplication61.printCalWithMondayFirst(str_array64);
    java.lang.String str67 = commApplication47.commAllMatches(str_array64);
    java.lang.String str68 = commApplication26.commBothMathches(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    java.lang.String str74 = calApplication69.printCalWithMondayFirst(str_array72);
    java.lang.String str75 = commApplication26.commBothMathches(str_array72);
    java.util.List list76 = sortApplication12.numericalSortSimpleNumbersSpecialChars(str_array72);
    java.lang.String str77 = bcApplication0.not(str_array72);
    java.lang.String str79 = bcApplication0.calculate("Output stream is null");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication80 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array82 = new java.lang.String[] { "hi!" };
    java.lang.String str83 = commApplication80.commAllMatches(str_array82);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication84 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication85 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array87 = new java.lang.String[] { "hi!" };
    java.util.List list88 = sortApplication85.sortAll(str_array87);
    java.lang.String str89 = bcApplication84.bracket(str_array87);
    java.lang.String str90 = commApplication80.commOnlySecond(str_array87);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str91 = bcApplication0.lessThanOrEqual(str_array87);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0"+ "'", str9.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str66.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str74.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "0"+ "'", str77.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "null"+ "'", str79.equals("null"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str89 + "' != '" + "hi!"+ "'", str89.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str90.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commBothMathches(str_array15);
    java.lang.String str18 = commApplication5.commNoMatches(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication19 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.lang.String str29 = commApplication21.commBothMathches(str_array27);
    java.lang.String[] str_array31 = new java.lang.String[] { "File not found" };
    java.lang.String str32 = commApplication21.commOnlySecond(str_array31);
    java.lang.String str33 = calApplication20.printCalWithMondayFirst(str_array31);
    java.lang.String str34 = calApplication19.printCal(str_array31);
    java.lang.String str35 = commApplication5.commOnlyFirst(str_array31);
    java.util.List list36 = sortApplication4.sortSimpleNumbers(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication37 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.util.List list40 = sortApplication37.sortAll(str_array39);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.util.List list45 = sortApplication37.numericalSortNumbersSpecialChars(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    java.lang.String str55 = commApplication47.commBothMathches(str_array53);
    java.lang.String str56 = calApplication46.printCalWithMondayFirst(str_array53);
    java.util.List list57 = sortApplication37.sortSimpleSpecialChars(str_array53);
    java.util.List list58 = sortApplication4.sortSpecialChars(str_array53);
    java.lang.String str59 = bcApplication3.number(str_array53);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str60 = bcApplication0.greaterThanOrEqual(str_array53);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str33.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str34.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str56.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!"+ "'", str59.equals("hi!"));

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.util.List list7 = sortApplication4.sortAll(str_array6);
    java.lang.String str8 = bcApplication3.bracket(str_array6);
    java.lang.String str9 = bcApplication0.not(str_array6);
    boolean b11 = bcApplication0.isValidOperator("0");
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication12 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.util.List list15 = sortApplication12.sortAll(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.util.List list20 = sortApplication12.numericalSortNumbersSpecialChars(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    java.util.List list25 = sortApplication12.numericalSortNumbers(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.lang.String str38 = commApplication30.commBothMathches(str_array36);
    java.lang.String str39 = commApplication26.commNoMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication26.commAllMatches(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = commApplication51.commBothMathches(str_array57);
    java.lang.String str60 = commApplication47.commNoMatches(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.lang.String str66 = calApplication61.printCalWithMondayFirst(str_array64);
    java.lang.String str67 = commApplication47.commAllMatches(str_array64);
    java.lang.String str68 = commApplication26.commBothMathches(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    java.lang.String str74 = calApplication69.printCalWithMondayFirst(str_array72);
    java.lang.String str75 = commApplication26.commBothMathches(str_array72);
    java.util.List list76 = sortApplication12.numericalSortSimpleNumbersSpecialChars(str_array72);
    java.lang.String str77 = bcApplication0.not(str_array72);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication82 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array84 = new java.lang.String[] { "hi!" };
    java.lang.String str85 = commApplication82.commAllMatches(str_array84);
    java.lang.String str86 = commApplication78.commOnlyFirst(str_array84);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication87 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array89 = new java.lang.String[] { "hi!" };
    java.lang.String str90 = commApplication87.commAllMatches(str_array89);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication91 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array93 = new java.lang.String[] { "hi!" };
    java.lang.String str94 = commApplication91.commAllMatches(str_array93);
    java.lang.String str95 = commApplication87.commOnlyFirst(str_array93);
    java.lang.String str96 = commApplication78.commOnlySecond(str_array93);
    java.lang.String str97 = bcApplication0.negate(str_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0"+ "'", str9.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str66.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str74.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "0"+ "'", str77.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str85.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str90.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str94.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str95.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str96 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str96.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str97 + "' != '" + "-hi!"+ "'", str97.equals("-hi!"));

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.lang.String str14 = commApplication6.commBothMathches(str_array12);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str15 = bcApplication0.subtract(str_array12);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }


    sg.edu.nus.comp.cs4218.impl.app.EchoApplication echoApplication0 = new sg.edu.nus.comp.cs4218.impl.app.EchoApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commOnlyFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = commApplication14.commBothMathches(str_array20);
    java.lang.String str23 = commApplication10.commNoMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.lang.String str29 = calApplication24.printCalWithMondayFirst(str_array27);
    java.lang.String str30 = commApplication10.commAllMatches(str_array27);
    java.lang.String str31 = commApplication1.commOnlyFirst(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.lang.String str38 = commApplication1.commOnlySecond(str_array35);
    java.io.InputStream inputStream39 = null;
    java.io.OutputStream outputStream40 = null;
    // The following exception was thrown during execution in test generation
    try {
      echoApplication0.run(str_array35, inputStream39, outputStream40);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException");
    } catch (sg.edu.nus.comp.cs4218.exception.EchoException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.EchoException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.EchoException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str29.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = calApplication13.printCalWithMondayFirst(str_array16);
    java.lang.String str19 = commApplication1.commNoMatches(str_array16);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str20 = calApplication0.printCalForMonthYear(str_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str18.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication6 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.lang.String str9 = commApplication6.commAllMatches(str_array8);
    java.lang.String str10 = commApplication2.commBothMathches(str_array8);
    java.lang.String[] str_array12 = new java.lang.String[] { "File not found" };
    java.lang.String str13 = commApplication2.commOnlySecond(str_array12);
    java.lang.String str14 = calApplication1.printCalWithMondayFirst(str_array12);
    java.lang.String str15 = calApplication0.printCal(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication16 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication21 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.lang.String str24 = commApplication21.commAllMatches(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.lang.String str29 = commApplication21.commBothMathches(str_array27);
    java.lang.String str30 = commApplication17.commNoMatches(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = commApplication33.commBothMathches(str_array39);
    java.lang.String[] str_array43 = new java.lang.String[] { "File not found" };
    java.lang.String str44 = commApplication33.commOnlySecond(str_array43);
    java.lang.String str45 = calApplication32.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = calApplication31.printCal(str_array43);
    java.lang.String str47 = commApplication17.commOnlyFirst(str_array43);
    java.util.List list48 = sortApplication16.sortSimpleNumbers(str_array43);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str49 = calApplication0.printCalForYearMondayFirst(str_array43);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str10.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str14.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str15.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str46.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list48);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    java.lang.String str7 = bcApplication0.calculate("hi!");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication12 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.lang.String str15 = commApplication12.commAllMatches(str_array14);
    java.lang.String str16 = commApplication8.commOnlyFirst(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication17 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.lang.String str30 = commApplication22.commBothMathches(str_array28);
    java.lang.String str31 = commApplication18.commNoMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.lang.String str42 = commApplication34.commBothMathches(str_array40);
    java.lang.String[] str_array44 = new java.lang.String[] { "File not found" };
    java.lang.String str45 = commApplication34.commOnlySecond(str_array44);
    java.lang.String str46 = calApplication33.printCalWithMondayFirst(str_array44);
    java.lang.String str47 = calApplication32.printCal(str_array44);
    java.lang.String str48 = commApplication18.commOnlyFirst(str_array44);
    java.util.List list49 = sortApplication17.sortSimpleNumbers(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication50 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication52 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.lang.String str55 = commApplication52.commAllMatches(str_array54);
    java.lang.String str56 = calApplication51.printCalWithMondayFirst(str_array54);
    java.util.List list57 = sortApplication50.numericalSortSimpleCapitalSpecialChars(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication59 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array61 = new java.lang.String[] { "hi!" };
    java.lang.String str62 = commApplication59.commAllMatches(str_array61);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication63 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array65 = new java.lang.String[] { "hi!" };
    java.lang.String str66 = commApplication63.commAllMatches(str_array65);
    java.lang.String str67 = commApplication59.commBothMathches(str_array65);
    java.lang.String str68 = calApplication58.printCalWithMondayFirst(str_array65);
    java.util.List list69 = sortApplication50.numericalSortSimpleCapitalNumber(str_array65);
    java.util.List list70 = sortApplication17.numericalSortSimpleCapitalSpecialChars(str_array65);
    java.lang.String str71 = commApplication8.commOnlyFirst(str_array65);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str72 = bcApplication0.notEqual(str_array65);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "hi!"+ "'", str7.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str46.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str47.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str56.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str66.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str68.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str71.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    java.util.List list13 = sortApplication1.numericalSortSimpleCapitalNumber(str_array11);
    java.lang.String[] str_array15 = new java.lang.String[] { "\t" };
    java.util.List list16 = sortApplication1.sortSimpleCapital(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication19 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!" };
    java.lang.String str22 = commApplication19.commAllMatches(str_array21);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.lang.String str26 = commApplication23.commAllMatches(str_array25);
    java.lang.String str27 = commApplication19.commBothMathches(str_array25);
    java.lang.String[] str_array29 = new java.lang.String[] { "File not found" };
    java.lang.String str30 = commApplication19.commOnlySecond(str_array29);
    java.lang.String str31 = calApplication18.printCalWithMondayFirst(str_array29);
    java.lang.String str32 = calApplication17.printCal(str_array29);
    java.util.List list33 = sortApplication1.numericalSortNumbers(str_array29);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.lang.String str42 = commApplication34.commOnlyFirst(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array53 = new java.lang.String[] { "hi!" };
    java.lang.String str54 = commApplication51.commAllMatches(str_array53);
    java.lang.String str55 = commApplication47.commBothMathches(str_array53);
    java.lang.String str56 = commApplication43.commNoMatches(str_array53);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    java.lang.String str62 = calApplication57.printCalWithMondayFirst(str_array60);
    java.lang.String str63 = commApplication43.commAllMatches(str_array60);
    java.lang.String str64 = commApplication34.commOnlyFirst(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    java.lang.String str70 = calApplication65.printCalWithMondayFirst(str_array68);
    java.lang.String str71 = commApplication34.commOnlySecond(str_array68);
    java.util.List list72 = sortApplication1.numericalSortSpecialChars(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication73 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    java.lang.String str79 = calApplication74.printCalWithMondayFirst(str_array77);
    java.util.List list80 = sortApplication73.numericalSortSimpleCapitalSpecialChars(str_array77);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication81 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array83 = new java.lang.String[] { "hi!" };
    java.lang.String str84 = commApplication81.commAllMatches(str_array83);
    java.util.List list85 = sortApplication73.numericalSortSimpleCapitalNumber(str_array83);
    java.lang.String[] str_array87 = new java.lang.String[] { "\t" };
    java.util.List list88 = sortApplication73.sortSimpleCapital(str_array87);
    java.util.List list89 = sortApplication1.sortCapitalNumbersSpecialChars(str_array87);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str90 = bcApplication0.pow(str_array87);
      org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ArrayIndexOutOfBoundsException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str31.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str32.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str54.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str62.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str70.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str71.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str79.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list89);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.lang.String str13 = calApplication0.printCalWithMondayFirst(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication14 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    java.lang.String str20 = calApplication15.printCalWithMondayFirst(str_array18);
    java.util.List list21 = sortApplication14.numericalSortSimpleCapitalSpecialChars(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.util.List list26 = sortApplication14.numericalSortSimpleCapitalNumber(str_array24);
    java.lang.String[] str_array28 = new java.lang.String[] { "\t" };
    java.util.List list29 = sortApplication14.sortSimpleCapital(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication30 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array34 = new java.lang.String[] { "hi!" };
    java.lang.String str35 = commApplication32.commAllMatches(str_array34);
    java.lang.String str36 = calApplication31.printCalWithMondayFirst(str_array34);
    java.util.List list37 = sortApplication30.numericalSortSimpleCapitalSpecialChars(str_array34);
    java.util.List list38 = sortApplication14.numericalSortStringsSimple(str_array34);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication39 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.util.List list46 = sortApplication39.numericalSortSimpleCapitalSpecialChars(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication52 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.lang.String str55 = commApplication52.commAllMatches(str_array54);
    java.lang.String str56 = commApplication48.commBothMathches(str_array54);
    java.lang.String str57 = calApplication47.printCalWithMondayFirst(str_array54);
    java.util.List list58 = sortApplication39.numericalSortSimpleCapitalNumber(str_array54);
    java.util.List list59 = sortApplication14.sortNumbers(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication60 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication61 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.util.List list64 = sortApplication61.sortAll(str_array63);
    java.lang.String str65 = bcApplication60.bracket(str_array63);
    java.util.List list66 = sortApplication14.sortStringsCapital(str_array63);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str67 = calApplication0.printCalForMonthYearMondayFirst(str_array63);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str13.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str20.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str36.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str57.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "hi!"+ "'", str65.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list66);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    java.lang.String str5 = calApplication0.printCalWithMondayFirst(str_array3);
    java.lang.String[] str_array6 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str7 = calApplication0.printCalForYear(str_array6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str5.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication6 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array8 = new java.lang.String[] { "hi!" };
    java.util.List list9 = sortApplication6.sortAll(str_array8);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    java.util.List list14 = sortApplication6.numericalSortNumbersSpecialChars(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication19 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!" };
    java.lang.String str22 = commApplication19.commAllMatches(str_array21);
    java.lang.String str23 = commApplication15.commBothMathches(str_array21);
    java.lang.String[] str_array25 = new java.lang.String[] { "File not found" };
    java.lang.String str26 = commApplication15.commOnlySecond(str_array25);
    java.util.List list27 = sortApplication6.numericalSortStringsCapital(str_array25);
    java.lang.String str28 = bcApplication0.bracket(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication29 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.util.List list32 = sortApplication29.sortAll(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.util.List list37 = sortApplication29.numericalSortNumbersSpecialChars(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.lang.String str46 = commApplication38.commBothMathches(str_array44);
    java.lang.String[] str_array48 = new java.lang.String[] { "File not found" };
    java.lang.String str49 = commApplication38.commOnlySecond(str_array48);
    java.util.List list50 = sortApplication29.numericalSortStringsCapital(str_array48);
    java.lang.String str51 = bcApplication0.bracket(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication52 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.util.List list55 = sortApplication52.sortAll(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    java.util.List list60 = sortApplication52.numericalSortNumbersSpecialChars(str_array58);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str61 = bcApplication0.or(str_array58);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "File not found"+ "'", str28.equals("File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "File not found"+ "'", str51.equals("File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list60);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    java.util.List list7 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.util.List list12 = sortApplication0.numericalSortSimpleCapitalNumber(str_array10);
    java.lang.String[] str_array14 = new java.lang.String[] { "\t" };
    java.util.List list15 = sortApplication0.sortSimpleCapital(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication16 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = calApplication17.printCalWithMondayFirst(str_array20);
    java.util.List list23 = sortApplication16.numericalSortSimpleCapitalSpecialChars(str_array20);
    java.util.List list24 = sortApplication0.numericalSortStringsSimple(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication25 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!" };
    java.lang.String str30 = commApplication27.commAllMatches(str_array29);
    java.lang.String str31 = calApplication26.printCalWithMondayFirst(str_array29);
    java.util.List list32 = sortApplication25.numericalSortSimpleCapitalSpecialChars(str_array29);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    java.lang.String str42 = commApplication34.commBothMathches(str_array40);
    java.lang.String str43 = calApplication33.printCalWithMondayFirst(str_array40);
    java.util.List list44 = sortApplication25.numericalSortSimpleCapitalNumber(str_array40);
    java.util.List list45 = sortApplication0.sortNumbers(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication46 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication47 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.util.List list50 = sortApplication47.sortAll(str_array49);
    java.lang.String str51 = bcApplication46.bracket(str_array49);
    java.util.List list52 = sortApplication0.sortStringsCapital(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication53 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = calApplication54.printCalWithMondayFirst(str_array57);
    java.util.List list60 = sortApplication53.numericalSortSimpleCapitalSpecialChars(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.lang.String str64 = commApplication61.commAllMatches(str_array63);
    java.util.List list65 = sortApplication53.numericalSortSimpleCapitalNumber(str_array63);
    java.util.List list66 = sortApplication0.sortNumbersSpecialChars(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str22.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str31.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str43.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "hi!"+ "'", str51.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str59.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list66);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    java.util.List list7 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commBothMathches(str_array15);
    java.lang.String str18 = calApplication8.printCalWithMondayFirst(str_array15);
    java.util.List list19 = sortApplication0.numericalSortSimpleCapitalNumber(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication20 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.util.List list23 = sortApplication20.sortAll(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.util.List list28 = sortApplication20.sortCapitalNumbersSpecialChars(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication29 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.util.List list32 = sortApplication29.sortAll(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.util.List list37 = sortApplication29.numericalSortNumbersSpecialChars(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication38 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.lang.String str41 = commApplication38.commAllMatches(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.lang.String str46 = commApplication38.commBothMathches(str_array44);
    java.lang.String[] str_array48 = new java.lang.String[] { "File not found" };
    java.lang.String str49 = commApplication38.commOnlySecond(str_array48);
    java.util.List list50 = sortApplication29.numericalSortStringsCapital(str_array48);
    java.util.List list51 = sortApplication20.sortSimpleCapitalNumber(str_array48);
    java.util.List list52 = sortApplication0.sortSimpleCapitalNumber(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication53 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array55 = new java.lang.String[] { "hi!" };
    java.lang.String str56 = commApplication53.commAllMatches(str_array55);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array59 = new java.lang.String[] { "hi!" };
    java.lang.String str60 = commApplication57.commAllMatches(str_array59);
    java.lang.String str61 = commApplication53.commOnlyFirst(str_array59);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    java.lang.String str74 = commApplication66.commBothMathches(str_array72);
    java.lang.String str75 = commApplication62.commNoMatches(str_array72);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication76 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication77 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array79 = new java.lang.String[] { "hi!" };
    java.lang.String str80 = commApplication77.commAllMatches(str_array79);
    java.lang.String str81 = calApplication76.printCalWithMondayFirst(str_array79);
    java.lang.String str82 = commApplication62.commAllMatches(str_array79);
    java.lang.String str83 = commApplication53.commOnlyFirst(str_array79);
    java.util.List list84 = sortApplication0.sortNumbersSpecialChars(str_array79);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication85 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication86 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication87 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array89 = new java.lang.String[] { "hi!" };
    java.lang.String str90 = commApplication87.commAllMatches(str_array89);
    java.lang.String str91 = calApplication86.printCalWithMondayFirst(str_array89);
    java.util.List list92 = sortApplication85.numericalSortSimpleCapitalSpecialChars(str_array89);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication93 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array95 = new java.lang.String[] { "hi!" };
    java.lang.String str96 = commApplication93.commAllMatches(str_array95);
    java.util.List list97 = sortApplication85.numericalSortSimpleCapitalNumber(str_array95);
    java.util.List list98 = sortApplication0.sortCapitalNumbers(str_array95);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str18.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str60.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str80 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str80.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str81.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str90 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str90.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str91.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array95);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str96 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str96.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list97);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list98);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commBothMathches(str_array15);
    java.lang.String[] str_array19 = new java.lang.String[] { "File not found" };
    java.lang.String str20 = commApplication9.commOnlySecond(str_array19);
    java.util.List list21 = sortApplication0.numericalSortStringsCapital(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication22 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.util.List list25 = sortApplication22.sortAll(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.util.List list30 = sortApplication22.numericalSortNumbersSpecialChars(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    java.lang.String str43 = commApplication35.commBothMathches(str_array41);
    java.lang.String str44 = commApplication31.commNoMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication45 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = calApplication45.printCalWithMondayFirst(str_array48);
    java.lang.String str51 = commApplication31.commAllMatches(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication52 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.lang.String str55 = commApplication52.commAllMatches(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication60 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array62 = new java.lang.String[] { "hi!" };
    java.lang.String str63 = commApplication60.commAllMatches(str_array62);
    java.lang.String str64 = commApplication56.commBothMathches(str_array62);
    java.lang.String str65 = commApplication52.commNoMatches(str_array62);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    java.lang.String str71 = calApplication66.printCalWithMondayFirst(str_array69);
    java.lang.String str72 = commApplication52.commAllMatches(str_array69);
    java.lang.String str73 = commApplication31.commBothMathches(str_array69);
    java.util.List list74 = sortApplication22.numericalSortCapitalSpecialChars(str_array69);
    java.util.List list75 = sortApplication0.numericalSortNumbersSpecialChars(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str50.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str71.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list75);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String str10 = calApplication0.printCalWithMondayFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication19 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array21 = new java.lang.String[] { "hi!" };
    java.lang.String str22 = commApplication19.commAllMatches(str_array21);
    java.lang.String str23 = commApplication15.commBothMathches(str_array21);
    java.lang.String str24 = commApplication11.commNoMatches(str_array21);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!" };
    java.lang.String str30 = commApplication27.commAllMatches(str_array29);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    java.lang.String str35 = commApplication27.commBothMathches(str_array33);
    java.lang.String[] str_array37 = new java.lang.String[] { "File not found" };
    java.lang.String str38 = commApplication27.commOnlySecond(str_array37);
    java.lang.String str39 = calApplication26.printCalWithMondayFirst(str_array37);
    java.lang.String str40 = calApplication25.printCal(str_array37);
    java.lang.String str41 = commApplication11.commOnlyFirst(str_array37);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str42 = calApplication0.printCalForMonthYear(str_array37);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str10.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str22.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str35.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str39.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str40.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    java.lang.String[] str_array1 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str2 = calApplication0.printCalForMonthYear(str_array1);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (java.lang.NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }


    sg.edu.nus.comp.cs4218.impl.app.CatApplication catApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CatApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.util.List list9 = sortApplication1.numericalSortNumbersSpecialChars(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String[] str_array20 = new java.lang.String[] { "File not found" };
    java.lang.String str21 = commApplication10.commOnlySecond(str_array20);
    java.util.List list22 = sortApplication1.numericalSortStringsCapital(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication23 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication24 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.util.List list27 = sortApplication24.sortAll(str_array26);
    java.lang.String str28 = bcApplication23.bracket(str_array26);
    java.util.List list29 = sortApplication1.numericalSortNumbers(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication30 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.util.List list33 = sortApplication30.sortAll(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.util.List list38 = sortApplication30.numericalSortNumbersSpecialChars(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication39 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.util.List list42 = sortApplication39.sortAll(str_array41);
    java.util.List list43 = sortApplication30.numericalSortNumbers(str_array41);
    java.util.List list44 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array41);
    java.io.InputStream inputStream45 = null;
    java.io.OutputStream outputStream46 = null;
    // The following exception was thrown during execution in test generation
    try {
      catApplication0.run(str_array41, inputStream45, outputStream46);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException");
    } catch (sg.edu.nus.comp.cs4218.exception.CatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.CatException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.CatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!"+ "'", str28.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.sortCapitalNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    java.lang.String str15 = calApplication10.printCalWithMondayFirst(str_array13);
    java.util.List list16 = sortApplication9.numericalSortSimpleCapitalSpecialChars(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    java.util.List list21 = sortApplication9.numericalSortSimpleCapitalNumber(str_array19);
    java.lang.String[] str_array23 = new java.lang.String[] { "\t" };
    java.util.List list24 = sortApplication9.sortSimpleCapital(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication25 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!" };
    java.lang.String str30 = commApplication27.commAllMatches(str_array29);
    java.lang.String str31 = calApplication26.printCalWithMondayFirst(str_array29);
    java.util.List list32 = sortApplication25.numericalSortSimpleCapitalSpecialChars(str_array29);
    java.util.List list33 = sortApplication9.numericalSortStringsSimple(str_array29);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication34 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array38 = new java.lang.String[] { "hi!" };
    java.lang.String str39 = commApplication36.commAllMatches(str_array38);
    java.lang.String str40 = calApplication35.printCalWithMondayFirst(str_array38);
    java.util.List list41 = sortApplication34.numericalSortSimpleCapitalSpecialChars(str_array38);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.util.List list46 = sortApplication34.numericalSortSimpleCapitalNumber(str_array44);
    java.lang.String[] str_array48 = new java.lang.String[] { "\t" };
    java.util.List list49 = sortApplication34.sortSimpleCapital(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication50 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication52 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.lang.String str55 = commApplication52.commAllMatches(str_array54);
    java.lang.String str56 = calApplication51.printCalWithMondayFirst(str_array54);
    java.util.List list57 = sortApplication50.numericalSortSimpleCapitalSpecialChars(str_array54);
    java.util.List list58 = sortApplication34.numericalSortStringsSimple(str_array54);
    java.util.List list59 = sortApplication9.numericalSortNumbers(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication60 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.lang.String str64 = commApplication61.commAllMatches(str_array63);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array67 = new java.lang.String[] { "hi!" };
    java.lang.String str68 = commApplication65.commAllMatches(str_array67);
    java.lang.String str69 = commApplication61.commBothMathches(str_array67);
    java.lang.String[] str_array71 = new java.lang.String[] { "File not found" };
    java.lang.String str72 = commApplication61.commOnlySecond(str_array71);
    java.lang.String str73 = calApplication60.printCalWithMondayFirst(str_array71);
    java.util.List list74 = sortApplication9.numericalSortCapitalNumbersSpecialChars(str_array71);
    java.util.List list75 = sortApplication0.sortAll(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str15.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str31.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str40.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str56.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str68 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str68.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str73.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list75);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String str10 = calApplication0.printCalWithMondayFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    java.lang.String str19 = commApplication11.commOnlyFirst(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = commApplication20.commOnlyFirst(str_array26);
    java.lang.String str29 = commApplication11.commOnlySecond(str_array26);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str30 = calApplication0.printCalForYear(str_array26);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str10.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = calApplication9.printCalWithMondayFirst(str_array16);
    java.util.List list20 = sortApplication1.numericalSortSimpleCapitalNumber(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.util.List list29 = sortApplication21.sortCapitalNumbersSpecialChars(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication30 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.util.List list33 = sortApplication30.sortAll(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.util.List list38 = sortApplication30.numericalSortNumbersSpecialChars(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    java.lang.String str47 = commApplication39.commBothMathches(str_array45);
    java.lang.String[] str_array49 = new java.lang.String[] { "File not found" };
    java.lang.String str50 = commApplication39.commOnlySecond(str_array49);
    java.util.List list51 = sortApplication30.numericalSortStringsCapital(str_array49);
    java.util.List list52 = sortApplication21.sortSimpleCapitalNumber(str_array49);
    java.util.List list53 = sortApplication1.sortSimpleCapitalNumber(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication54 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.util.List list57 = sortApplication54.sortAll(str_array56);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication58 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication59 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication60 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array62 = new java.lang.String[] { "hi!" };
    java.lang.String str63 = commApplication60.commAllMatches(str_array62);
    java.lang.String str64 = calApplication59.printCalWithMondayFirst(str_array62);
    java.util.List list65 = sortApplication58.numericalSortSimpleCapitalSpecialChars(str_array62);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array73 = new java.lang.String[] { "hi!" };
    java.lang.String str74 = commApplication71.commAllMatches(str_array73);
    java.lang.String str75 = commApplication67.commBothMathches(str_array73);
    java.lang.String str76 = calApplication66.printCalWithMondayFirst(str_array73);
    java.util.List list77 = sortApplication58.numericalSortSimpleCapitalNumber(str_array73);
    java.util.List list78 = sortApplication54.numericalSortNumbersSpecialChars(str_array73);
    java.util.List list79 = sortApplication1.sortSimpleNumbers(str_array73);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str80 = bcApplication0.multiply(str_array73);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str64.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str76.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list79);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String str10 = calApplication0.printCalWithMondayFirst(str_array7);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication11 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.util.List list14 = sortApplication11.sortAll(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array17 = new java.lang.String[] { "hi!" };
    java.lang.String str18 = commApplication15.commAllMatches(str_array17);
    java.util.List list19 = sortApplication11.sortCapitalNumbersSpecialChars(str_array17);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = commApplication20.commOnlyFirst(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.lang.String str32 = commApplication29.commAllMatches(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.lang.String str41 = commApplication33.commBothMathches(str_array39);
    java.lang.String str42 = commApplication29.commNoMatches(str_array39);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.lang.String str48 = calApplication43.printCalWithMondayFirst(str_array46);
    java.lang.String str49 = commApplication29.commAllMatches(str_array46);
    java.lang.String str50 = commApplication20.commOnlyFirst(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication51 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication52 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array54 = new java.lang.String[] { "hi!" };
    java.lang.String str55 = commApplication52.commAllMatches(str_array54);
    java.lang.String str56 = calApplication51.printCalWithMondayFirst(str_array54);
    java.lang.String str57 = commApplication20.commOnlySecond(str_array54);
    java.util.List list58 = sortApplication11.numericalSortSimpleNumbers(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication59 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array61 = new java.lang.String[] { "hi!" };
    java.lang.String str62 = commApplication59.commAllMatches(str_array61);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication63 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array65 = new java.lang.String[] { "hi!" };
    java.lang.String str66 = commApplication63.commAllMatches(str_array65);
    java.lang.String str67 = commApplication59.commOnlyFirst(str_array65);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication68 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array70 = new java.lang.String[] { "hi!" };
    java.lang.String str71 = commApplication68.commAllMatches(str_array70);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication72 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!" };
    java.lang.String str75 = commApplication72.commAllMatches(str_array74);
    java.lang.String str76 = commApplication68.commOnlyFirst(str_array74);
    java.lang.String str77 = commApplication59.commBothMathches(str_array74);
    java.util.List list78 = sortApplication11.numericalSortAll(str_array74);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str79 = calApplication0.printCalForMonthYear(str_array74);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str10.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str41.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str48.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str56.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str66.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str67 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str67.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str71.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str76.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str77.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = calApplication9.printCalWithMondayFirst(str_array16);
    java.util.List list20 = sortApplication1.numericalSortSimpleCapitalNumber(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.util.List list29 = sortApplication21.sortCapitalNumbersSpecialChars(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication30 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.util.List list33 = sortApplication30.sortAll(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.util.List list38 = sortApplication30.numericalSortNumbersSpecialChars(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    java.lang.String str47 = commApplication39.commBothMathches(str_array45);
    java.lang.String[] str_array49 = new java.lang.String[] { "File not found" };
    java.lang.String str50 = commApplication39.commOnlySecond(str_array49);
    java.util.List list51 = sortApplication30.numericalSortStringsCapital(str_array49);
    java.util.List list52 = sortApplication21.sortSimpleCapitalNumber(str_array49);
    java.util.List list53 = sortApplication1.sortSimpleCapitalNumber(str_array49);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str54 = bcApplication0.greaterThan(str_array49);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    boolean b7 = bcApplication0.isValidBracketMatching("");
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication12 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array14 = new java.lang.String[] { "hi!" };
    java.lang.String str15 = commApplication12.commAllMatches(str_array14);
    java.lang.String str16 = commApplication8.commOnlyFirst(str_array14);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str17 = bcApplication0.and(str_array14);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str15.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }


    sg.edu.nus.comp.cs4218.impl.app.FmtApplication fmtApplication0 = new sg.edu.nus.comp.cs4218.impl.app.FmtApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication3 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array5 = new java.lang.String[] { "hi!" };
    java.lang.String str6 = commApplication3.commAllMatches(str_array5);
    java.lang.String str7 = calApplication2.printCalWithMondayFirst(str_array5);
    java.util.List list8 = sortApplication1.numericalSortSimpleCapitalSpecialChars(str_array5);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array12 = new java.lang.String[] { "hi!" };
    java.lang.String str13 = commApplication10.commAllMatches(str_array12);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.lang.String str18 = commApplication10.commBothMathches(str_array16);
    java.lang.String str19 = calApplication9.printCalWithMondayFirst(str_array16);
    java.util.List list20 = sortApplication1.numericalSortSimpleCapitalNumber(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication21 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array23 = new java.lang.String[] { "hi!" };
    java.util.List list24 = sortApplication21.sortAll(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication25 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array27 = new java.lang.String[] { "hi!" };
    java.lang.String str28 = commApplication25.commAllMatches(str_array27);
    java.util.List list29 = sortApplication21.sortCapitalNumbersSpecialChars(str_array27);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication30 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.util.List list33 = sortApplication30.sortAll(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication34 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array36 = new java.lang.String[] { "hi!" };
    java.lang.String str37 = commApplication34.commAllMatches(str_array36);
    java.util.List list38 = sortApplication30.numericalSortNumbersSpecialChars(str_array36);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    java.lang.String str47 = commApplication39.commBothMathches(str_array45);
    java.lang.String[] str_array49 = new java.lang.String[] { "File not found" };
    java.lang.String str50 = commApplication39.commOnlySecond(str_array49);
    java.util.List list51 = sortApplication30.numericalSortStringsCapital(str_array49);
    java.util.List list52 = sortApplication21.sortSimpleCapitalNumber(str_array49);
    java.util.List list53 = sortApplication1.sortSimpleCapitalNumber(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array56 = new java.lang.String[] { "hi!" };
    java.lang.String str57 = commApplication54.commAllMatches(str_array56);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    java.lang.String str62 = commApplication54.commOnlyFirst(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication63 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array65 = new java.lang.String[] { "hi!" };
    java.lang.String str66 = commApplication63.commAllMatches(str_array65);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array73 = new java.lang.String[] { "hi!" };
    java.lang.String str74 = commApplication71.commAllMatches(str_array73);
    java.lang.String str75 = commApplication67.commBothMathches(str_array73);
    java.lang.String str76 = commApplication63.commNoMatches(str_array73);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication77 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    java.lang.String str82 = calApplication77.printCalWithMondayFirst(str_array80);
    java.lang.String str83 = commApplication63.commAllMatches(str_array80);
    java.lang.String str84 = commApplication54.commOnlyFirst(str_array80);
    java.util.List list85 = sortApplication1.sortNumbersSpecialChars(str_array80);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication86 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication87 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication88 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array90 = new java.lang.String[] { "hi!" };
    java.lang.String str91 = commApplication88.commAllMatches(str_array90);
    java.lang.String str92 = calApplication87.printCalWithMondayFirst(str_array90);
    java.util.List list93 = sortApplication86.numericalSortSimpleCapitalSpecialChars(str_array90);
    java.util.List list94 = sortApplication1.numericalSortSimpleCapital(str_array90);
    java.io.InputStream inputStream95 = null;
    java.io.OutputStream outputStream96 = null;
    // The following exception was thrown during execution in test generation
    try {
      fmtApplication0.run(str_array90, inputStream95, outputStream96);
      org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException");
    } catch (sg.edu.nus.comp.cs4218.exception.FmtException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("sg.edu.nus.comp.cs4218.exception.FmtException")) {
        org.junit.Assert.fail("Expected exception of type sg.edu.nus.comp.cs4218.exception.FmtException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str6.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str7.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str13.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str18.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str19.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str28.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str37.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str57.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str62.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str66 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str66.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str76.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str82.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str91.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str92 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str92.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list94);

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication6 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication7 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.lang.String str12 = calApplication7.printCalWithMondayFirst(str_array10);
    java.util.List list13 = sortApplication6.numericalSortSimpleCapitalSpecialChars(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.util.List list18 = sortApplication6.numericalSortSimpleCapitalNumber(str_array16);
    java.lang.String[] str_array20 = new java.lang.String[] { "\t" };
    java.util.List list21 = sortApplication6.sortSimpleCapital(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication22 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = calApplication23.printCalWithMondayFirst(str_array26);
    java.util.List list29 = sortApplication22.numericalSortSimpleCapitalSpecialChars(str_array26);
    java.util.List list30 = sortApplication6.numericalSortStringsSimple(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication31 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.util.List list38 = sortApplication31.numericalSortSimpleCapitalSpecialChars(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array42 = new java.lang.String[] { "hi!" };
    java.lang.String str43 = commApplication40.commAllMatches(str_array42);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.lang.String str48 = commApplication40.commBothMathches(str_array46);
    java.lang.String str49 = calApplication39.printCalWithMondayFirst(str_array46);
    java.util.List list50 = sortApplication31.numericalSortSimpleCapitalNumber(str_array46);
    java.util.List list51 = sortApplication6.sortNumbers(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication52 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication53 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array55 = new java.lang.String[] { "hi!" };
    java.util.List list56 = sortApplication53.sortAll(str_array55);
    java.lang.String str57 = bcApplication52.bracket(str_array55);
    java.util.List list58 = sortApplication6.sortStringsCapital(str_array55);
    java.lang.String str59 = bcApplication0.bracket(str_array55);
    java.lang.String str61 = bcApplication0.calculate("");
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication62 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.util.List list65 = sortApplication62.sortAll(str_array64);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    java.util.List list70 = sortApplication62.numericalSortNumbersSpecialChars(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication71 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array73 = new java.lang.String[] { "hi!" };
    java.util.List list74 = sortApplication71.sortAll(str_array73);
    java.util.List list75 = sortApplication62.numericalSortNumbers(str_array73);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication76 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array78 = new java.lang.String[] { "hi!" };
    java.lang.String str79 = commApplication76.commAllMatches(str_array78);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication80 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array82 = new java.lang.String[] { "hi!" };
    java.lang.String str83 = commApplication80.commAllMatches(str_array82);
    java.lang.String str84 = commApplication76.commBothMathches(str_array82);
    java.lang.String[] str_array86 = new java.lang.String[] { "File not found" };
    java.lang.String str87 = commApplication76.commOnlySecond(str_array86);
    java.util.List list88 = sortApplication62.numericalSortSimpleSpecialChars(str_array86);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str89 = bcApplication0.lessThanOrEqual(str_array86);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str12.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str28.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str49.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!"+ "'", str57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!"+ "'", str59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + ""+ "'", str61.equals(""));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str79.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str84.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list88);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.util.List list12 = sortApplication9.sortAll(str_array11);
    java.util.List list13 = sortApplication0.numericalSortNumbers(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    java.lang.String str26 = commApplication18.commBothMathches(str_array24);
    java.lang.String str27 = commApplication14.commNoMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication28 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.lang.String str32 = commApplication29.commAllMatches(str_array31);
    java.lang.String str33 = calApplication28.printCalWithMondayFirst(str_array31);
    java.lang.String str34 = commApplication14.commAllMatches(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array41 = new java.lang.String[] { "hi!" };
    java.lang.String str42 = commApplication39.commAllMatches(str_array41);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication43 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array45 = new java.lang.String[] { "hi!" };
    java.lang.String str46 = commApplication43.commAllMatches(str_array45);
    java.lang.String str47 = commApplication39.commBothMathches(str_array45);
    java.lang.String str48 = commApplication35.commNoMatches(str_array45);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.lang.String str54 = calApplication49.printCalWithMondayFirst(str_array52);
    java.lang.String str55 = commApplication35.commAllMatches(str_array52);
    java.lang.String str56 = commApplication14.commBothMathches(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    java.lang.String str62 = calApplication57.printCalWithMondayFirst(str_array60);
    java.lang.String str63 = commApplication14.commBothMathches(str_array60);
    java.util.List list64 = sortApplication0.numericalSortSimpleNumbersSpecialChars(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication65 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array67 = new java.lang.String[] { "hi!" };
    java.util.List list68 = sortApplication65.sortAll(str_array67);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication69 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array71 = new java.lang.String[] { "hi!" };
    java.lang.String str72 = commApplication69.commAllMatches(str_array71);
    java.util.List list73 = sortApplication65.numericalSortNumbersSpecialChars(str_array71);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication79 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array81 = new java.lang.String[] { "hi!" };
    java.lang.String str82 = commApplication79.commAllMatches(str_array81);
    java.lang.String str83 = commApplication75.commBothMathches(str_array81);
    java.lang.String str84 = calApplication74.printCalWithMondayFirst(str_array81);
    java.util.List list85 = sortApplication65.sortSimpleSpecialChars(str_array81);
    java.util.List list86 = sortApplication0.numericalSortCapitalSpecialChars(str_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str26.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str32 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str32.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str33.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str42.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str54.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str55.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str56.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str62.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str63.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str72.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str84.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list86);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }


    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.lang.String str4 = commApplication1.commAllMatches(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication5 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array7 = new java.lang.String[] { "hi!" };
    java.lang.String str8 = commApplication5.commAllMatches(str_array7);
    java.lang.String str9 = commApplication1.commBothMathches(str_array7);
    java.lang.String[] str_array11 = new java.lang.String[] { "File not found" };
    java.lang.String str12 = commApplication1.commOnlySecond(str_array11);
    java.lang.String str13 = calApplication0.printCalWithMondayFirst(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication15 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication16 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array18 = new java.lang.String[] { "hi!" };
    java.lang.String str19 = commApplication16.commAllMatches(str_array18);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication20 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array22 = new java.lang.String[] { "hi!" };
    java.lang.String str23 = commApplication20.commAllMatches(str_array22);
    java.lang.String str24 = commApplication16.commBothMathches(str_array22);
    java.lang.String[] str_array26 = new java.lang.String[] { "File not found" };
    java.lang.String str27 = commApplication16.commOnlySecond(str_array26);
    java.lang.String str28 = calApplication15.printCalWithMondayFirst(str_array26);
    java.lang.String str29 = calApplication14.printCal(str_array26);
    java.lang.String str30 = calApplication0.printCalWithMondayFirst(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication35 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array37 = new java.lang.String[] { "hi!" };
    java.lang.String str38 = commApplication35.commAllMatches(str_array37);
    java.lang.String str39 = commApplication31.commOnlyFirst(str_array37);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication40 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication42 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array44 = new java.lang.String[] { "hi!" };
    java.lang.String str45 = commApplication42.commAllMatches(str_array44);
    java.lang.String str46 = calApplication41.printCalWithMondayFirst(str_array44);
    java.util.List list47 = sortApplication40.numericalSortSimpleCapitalSpecialChars(str_array44);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    java.util.List list52 = sortApplication40.numericalSortSimpleCapitalNumber(str_array50);
    java.lang.String[] str_array54 = new java.lang.String[] { "\t" };
    java.util.List list55 = sortApplication40.sortSimpleCapital(str_array54);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication56 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication57 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication58 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array60 = new java.lang.String[] { "hi!" };
    java.lang.String str61 = commApplication58.commAllMatches(str_array60);
    java.lang.String str62 = calApplication57.printCalWithMondayFirst(str_array60);
    java.util.List list63 = sortApplication56.numericalSortSimpleCapitalSpecialChars(str_array60);
    java.util.List list64 = sortApplication40.numericalSortStringsSimple(str_array60);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication65 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication67 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array69 = new java.lang.String[] { "hi!" };
    java.lang.String str70 = commApplication67.commAllMatches(str_array69);
    java.lang.String str71 = calApplication66.printCalWithMondayFirst(str_array69);
    java.util.List list72 = sortApplication65.numericalSortSimpleCapitalSpecialChars(str_array69);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication73 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication74 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array76 = new java.lang.String[] { "hi!" };
    java.lang.String str77 = commApplication74.commAllMatches(str_array76);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication78 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array80 = new java.lang.String[] { "hi!" };
    java.lang.String str81 = commApplication78.commAllMatches(str_array80);
    java.lang.String str82 = commApplication74.commBothMathches(str_array80);
    java.lang.String str83 = calApplication73.printCalWithMondayFirst(str_array80);
    java.util.List list84 = sortApplication65.numericalSortSimpleCapitalNumber(str_array80);
    java.util.List list85 = sortApplication40.sortNumbers(str_array80);
    java.lang.String str86 = commApplication31.commBothMathches(str_array80);
    // The following exception was thrown during execution in test generation
    try {
      java.lang.String str87 = calApplication0.printCalForYear(str_array80);
      org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException");
    } catch (java.lang.NumberFormatException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NumberFormatException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str4.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str9.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str13.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str19.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str23.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str24.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str28.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str29.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str30.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str45.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str46.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str61 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str61.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str62 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str62.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str70.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str71 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str71.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str77 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str77.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str81 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str81.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str83.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list84);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    boolean b2 = bcApplication0.isValidOperator("");
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication3 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication4 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.util.List list7 = sortApplication4.sortAll(str_array6);
    java.lang.String str8 = bcApplication3.bracket(str_array6);
    java.lang.String str9 = bcApplication0.not(str_array6);
    boolean b11 = bcApplication0.isValidOperator("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!"+ "'", str8.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0"+ "'", str9.equals("0"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commBothMathches(str_array15);
    java.lang.String[] str_array19 = new java.lang.String[] { "File not found" };
    java.lang.String str20 = commApplication9.commOnlySecond(str_array19);
    java.util.List list21 = sortApplication0.numericalSortStringsCapital(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication22 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication23 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.util.List list26 = sortApplication23.sortAll(str_array25);
    java.lang.String str27 = bcApplication22.bracket(str_array25);
    java.util.List list28 = sortApplication0.numericalSortNumbers(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication29 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication31 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array33 = new java.lang.String[] { "hi!" };
    java.lang.String str34 = commApplication31.commAllMatches(str_array33);
    java.lang.String str35 = calApplication30.printCalWithMondayFirst(str_array33);
    java.util.List list36 = sortApplication29.numericalSortSimpleCapitalSpecialChars(str_array33);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication37 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array39 = new java.lang.String[] { "hi!" };
    java.lang.String str40 = commApplication37.commAllMatches(str_array39);
    java.util.List list41 = sortApplication29.numericalSortSimpleCapitalNumber(str_array39);
    java.lang.String[] str_array43 = new java.lang.String[] { "\t" };
    java.util.List list44 = sortApplication29.sortSimpleCapital(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication45 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication47 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array49 = new java.lang.String[] { "hi!" };
    java.lang.String str50 = commApplication47.commAllMatches(str_array49);
    java.lang.String str51 = calApplication46.printCalWithMondayFirst(str_array49);
    java.util.List list52 = sortApplication45.numericalSortSimpleCapitalSpecialChars(str_array49);
    java.util.List list53 = sortApplication29.numericalSortStringsSimple(str_array49);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication54 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    java.lang.String str60 = calApplication55.printCalWithMondayFirst(str_array58);
    java.util.List list61 = sortApplication54.numericalSortSimpleCapitalSpecialChars(str_array58);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication62 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array64 = new java.lang.String[] { "hi!" };
    java.lang.String str65 = commApplication62.commAllMatches(str_array64);
    java.util.List list66 = sortApplication54.numericalSortSimpleCapitalNumber(str_array64);
    java.lang.String[] str_array68 = new java.lang.String[] { "\t" };
    java.util.List list69 = sortApplication54.sortSimpleCapital(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication70 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication72 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array74 = new java.lang.String[] { "hi!" };
    java.lang.String str75 = commApplication72.commAllMatches(str_array74);
    java.lang.String str76 = calApplication71.printCalWithMondayFirst(str_array74);
    java.util.List list77 = sortApplication70.numericalSortSimpleCapitalSpecialChars(str_array74);
    java.util.List list78 = sortApplication54.numericalSortStringsSimple(str_array74);
    java.util.List list79 = sortApplication29.numericalSortNumbers(str_array74);
    java.util.List list80 = sortApplication0.sortSimpleCapitalSpecialChars(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!"+ "'", str27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str35.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str40.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str50.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str51.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str60.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str65.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str75.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str76 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str76.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list80);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.sortCapitalNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commOnlyFirst(str_array15);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication22 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array24 = new java.lang.String[] { "hi!" };
    java.lang.String str25 = commApplication22.commAllMatches(str_array24);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array28 = new java.lang.String[] { "hi!" };
    java.lang.String str29 = commApplication26.commAllMatches(str_array28);
    java.lang.String str30 = commApplication22.commBothMathches(str_array28);
    java.lang.String str31 = commApplication18.commNoMatches(str_array28);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.lang.String str38 = commApplication18.commAllMatches(str_array35);
    java.lang.String str39 = commApplication9.commOnlyFirst(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication41 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array43 = new java.lang.String[] { "hi!" };
    java.lang.String str44 = commApplication41.commAllMatches(str_array43);
    java.lang.String str45 = calApplication40.printCalWithMondayFirst(str_array43);
    java.lang.String str46 = commApplication9.commOnlySecond(str_array43);
    java.util.List list47 = sortApplication0.numericalSortSimpleNumbers(str_array43);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication48 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication49 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication50 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array52 = new java.lang.String[] { "hi!" };
    java.lang.String str53 = commApplication50.commAllMatches(str_array52);
    java.lang.String str54 = calApplication49.printCalWithMondayFirst(str_array52);
    java.util.List list55 = sortApplication48.numericalSortSimpleCapitalSpecialChars(str_array52);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication56 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array58 = new java.lang.String[] { "hi!" };
    java.lang.String str59 = commApplication56.commAllMatches(str_array58);
    java.util.List list60 = sortApplication48.numericalSortSimpleCapitalNumber(str_array58);
    java.lang.String[] str_array62 = new java.lang.String[] { "\t" };
    java.util.List list63 = sortApplication48.sortSimpleCapital(str_array62);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication64 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication65 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    java.lang.String str70 = calApplication65.printCalWithMondayFirst(str_array68);
    java.util.List list71 = sortApplication64.numericalSortSimpleCapitalSpecialChars(str_array68);
    java.util.List list72 = sortApplication48.numericalSortStringsSimple(str_array68);
    java.lang.String[] str_array74 = new java.lang.String[] { "Output stream is null" };
    java.util.List list75 = sortApplication48.sortSimpleCapitalSpecialChars(str_array74);
    java.util.List list76 = sortApplication0.sortNumbers(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str25.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str29.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str31.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str38.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str44.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str45 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str45.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str46.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str53.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str54.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str59.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str70 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str70.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list76);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }


    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication0 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication1 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array3 = new java.lang.String[] { "hi!" };
    java.util.List list4 = sortApplication1.sortAll(str_array3);
    java.lang.String str5 = bcApplication0.bracket(str_array3);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication6 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication7 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.lang.String str12 = calApplication7.printCalWithMondayFirst(str_array10);
    java.util.List list13 = sortApplication6.numericalSortSimpleCapitalSpecialChars(str_array10);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication14 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array16 = new java.lang.String[] { "hi!" };
    java.lang.String str17 = commApplication14.commAllMatches(str_array16);
    java.util.List list18 = sortApplication6.numericalSortSimpleCapitalNumber(str_array16);
    java.lang.String[] str_array20 = new java.lang.String[] { "\t" };
    java.util.List list21 = sortApplication6.sortSimpleCapital(str_array20);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication22 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication23 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication24 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array26 = new java.lang.String[] { "hi!" };
    java.lang.String str27 = commApplication24.commAllMatches(str_array26);
    java.lang.String str28 = calApplication23.printCalWithMondayFirst(str_array26);
    java.util.List list29 = sortApplication22.numericalSortSimpleCapitalSpecialChars(str_array26);
    java.util.List list30 = sortApplication6.numericalSortStringsSimple(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication31 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication32 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.lang.String str37 = calApplication32.printCalWithMondayFirst(str_array35);
    java.util.List list38 = sortApplication31.numericalSortSimpleCapitalSpecialChars(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication39 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication40 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array42 = new java.lang.String[] { "hi!" };
    java.lang.String str43 = commApplication40.commAllMatches(str_array42);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication44 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.lang.String str47 = commApplication44.commAllMatches(str_array46);
    java.lang.String str48 = commApplication40.commBothMathches(str_array46);
    java.lang.String str49 = calApplication39.printCalWithMondayFirst(str_array46);
    java.util.List list50 = sortApplication31.numericalSortSimpleCapitalNumber(str_array46);
    java.util.List list51 = sortApplication6.sortNumbers(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication52 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication53 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array55 = new java.lang.String[] { "hi!" };
    java.util.List list56 = sortApplication53.sortAll(str_array55);
    java.lang.String str57 = bcApplication52.bracket(str_array55);
    java.util.List list58 = sortApplication6.sortStringsCapital(str_array55);
    java.lang.String str59 = bcApplication0.bracket(str_array55);
    boolean b61 = bcApplication0.isValidOperator("");
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!"+ "'", str5.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str12.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str27.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str28.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str37.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str43.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str47 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str47.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str48 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str48.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str49.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!"+ "'", str57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!"+ "'", str59.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }


    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication0 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.lang.String str3 = commApplication0.commAllMatches(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.lang.String str8 = commApplication0.commBothMathches(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication9 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication10 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication11 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array13 = new java.lang.String[] { "hi!" };
    java.lang.String str14 = commApplication11.commAllMatches(str_array13);
    java.lang.String str15 = calApplication10.printCalWithMondayFirst(str_array13);
    java.util.List list16 = sortApplication9.numericalSortSimpleCapitalSpecialChars(str_array13);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array19 = new java.lang.String[] { "hi!" };
    java.lang.String str20 = commApplication17.commAllMatches(str_array19);
    java.util.List list21 = sortApplication9.numericalSortSimpleCapitalNumber(str_array19);
    java.lang.String[] str_array23 = new java.lang.String[] { "\t" };
    java.util.List list24 = sortApplication9.sortSimpleCapital(str_array23);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication25 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication26 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication27 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array29 = new java.lang.String[] { "hi!" };
    java.lang.String str30 = commApplication27.commAllMatches(str_array29);
    java.lang.String str31 = calApplication26.printCalWithMondayFirst(str_array29);
    java.util.List list32 = sortApplication25.numericalSortSimpleCapitalSpecialChars(str_array29);
    java.util.List list33 = sortApplication9.numericalSortStringsSimple(str_array29);
    java.lang.String str34 = commApplication0.commNoMatches(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str3.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str8.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str14 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str14.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str15 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str15.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str30 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str30.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str31 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str31.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str34.equals("comm: terminated with error message comm: File not found"));

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array2 = new java.lang.String[] { "hi!" };
    java.util.List list3 = sortApplication0.sortAll(str_array2);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication4 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array6 = new java.lang.String[] { "hi!" };
    java.lang.String str7 = commApplication4.commAllMatches(str_array6);
    java.util.List list8 = sortApplication0.numericalSortNumbersSpecialChars(str_array6);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication9 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array11 = new java.lang.String[] { "hi!" };
    java.lang.String str12 = commApplication9.commAllMatches(str_array11);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication13 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array15 = new java.lang.String[] { "hi!" };
    java.lang.String str16 = commApplication13.commAllMatches(str_array15);
    java.lang.String str17 = commApplication9.commBothMathches(str_array15);
    java.lang.String[] str_array19 = new java.lang.String[] { "File not found" };
    java.lang.String str20 = commApplication9.commOnlySecond(str_array19);
    java.util.List list21 = sortApplication0.numericalSortStringsCapital(str_array19);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication22 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication23 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array25 = new java.lang.String[] { "hi!" };
    java.util.List list26 = sortApplication23.sortAll(str_array25);
    java.lang.String str27 = bcApplication22.bracket(str_array25);
    java.util.List list28 = sortApplication0.numericalSortNumbers(str_array25);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication29 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array31 = new java.lang.String[] { "hi!" };
    java.util.List list32 = sortApplication29.sortAll(str_array31);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication33 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array35 = new java.lang.String[] { "hi!" };
    java.lang.String str36 = commApplication33.commAllMatches(str_array35);
    java.util.List list37 = sortApplication29.numericalSortNumbersSpecialChars(str_array35);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication38 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array40 = new java.lang.String[] { "hi!" };
    java.util.List list41 = sortApplication38.sortAll(str_array40);
    java.util.List list42 = sortApplication29.numericalSortNumbers(str_array40);
    java.util.List list43 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array40);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication44 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array46 = new java.lang.String[] { "hi!" };
    java.util.List list47 = sortApplication44.sortAll(str_array46);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication48 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array50 = new java.lang.String[] { "hi!" };
    java.lang.String str51 = commApplication48.commAllMatches(str_array50);
    sg.edu.nus.comp.cs4218.impl.app.BcApplication bcApplication52 = new sg.edu.nus.comp.cs4218.impl.app.BcApplication();
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication53 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    java.lang.String[] str_array55 = new java.lang.String[] { "hi!" };
    java.util.List list56 = sortApplication53.sortAll(str_array55);
    java.lang.String str57 = bcApplication52.bracket(str_array55);
    java.lang.String str58 = commApplication48.commOnlySecond(str_array55);
    java.util.List list59 = sortApplication44.sortSimpleNumbers(str_array55);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication60 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.lang.String str64 = commApplication61.commAllMatches(str_array63);
    java.lang.String str65 = calApplication60.printCalWithMondayFirst(str_array63);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication66 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array68 = new java.lang.String[] { "hi!" };
    java.lang.String str69 = commApplication66.commAllMatches(str_array68);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array72 = new java.lang.String[] { "hi!" };
    java.lang.String str73 = commApplication70.commAllMatches(str_array72);
    java.lang.String str74 = commApplication66.commOnlyFirst(str_array72);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication75 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array77 = new java.lang.String[] { "hi!" };
    java.lang.String str78 = commApplication75.commAllMatches(str_array77);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication79 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array81 = new java.lang.String[] { "hi!" };
    java.lang.String str82 = commApplication79.commAllMatches(str_array81);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication83 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array85 = new java.lang.String[] { "hi!" };
    java.lang.String str86 = commApplication83.commAllMatches(str_array85);
    java.lang.String str87 = commApplication79.commBothMathches(str_array85);
    java.lang.String str88 = commApplication75.commNoMatches(str_array85);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication89 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication90 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array92 = new java.lang.String[] { "hi!" };
    java.lang.String str93 = commApplication90.commAllMatches(str_array92);
    java.lang.String str94 = calApplication89.printCalWithMondayFirst(str_array92);
    java.lang.String str95 = commApplication75.commAllMatches(str_array92);
    java.lang.String str96 = commApplication66.commOnlyFirst(str_array92);
    java.lang.String str97 = calApplication60.printCal(str_array92);
    java.util.List list98 = sortApplication44.sortSpecialChars(str_array92);
    java.util.List list99 = sortApplication0.numericalSortSimpleCapital(str_array92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str7.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str12.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str16.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str17.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str20.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!"+ "'", str27.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str36.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str51 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str51.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!"+ "'", str57.equals("hi!"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str65.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str69 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str69.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str73 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str73.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str78 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str78.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str82 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str82.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str86 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str86.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str88 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str88.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array92);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str93 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str93.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str94 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str94.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str95.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str96 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str96.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str97 + "' != '" + "     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"+ "'", str97.equals("     March 2016\nSu Mo Tu We Th Fr Sa\n       1  2  3  4  5\n 6  7  8  9 10 11 12\n13 14 15 16 17 18 19\n20 21 22 23 24 25 26\n27 28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list98);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list99);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }


    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication0 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication1 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication2 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array4 = new java.lang.String[] { "hi!" };
    java.lang.String str5 = commApplication2.commAllMatches(str_array4);
    java.lang.String str6 = calApplication1.printCalWithMondayFirst(str_array4);
    java.util.List list7 = sortApplication0.numericalSortSimpleCapitalSpecialChars(str_array4);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication8 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array10 = new java.lang.String[] { "hi!" };
    java.lang.String str11 = commApplication8.commAllMatches(str_array10);
    java.util.List list12 = sortApplication0.numericalSortSimpleCapitalNumber(str_array10);
    java.lang.String[] str_array14 = new java.lang.String[] { "\t" };
    java.util.List list15 = sortApplication0.sortSimpleCapital(str_array14);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication16 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication17 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication18 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array20 = new java.lang.String[] { "hi!" };
    java.lang.String str21 = commApplication18.commAllMatches(str_array20);
    java.lang.String str22 = calApplication17.printCalWithMondayFirst(str_array20);
    java.util.List list23 = sortApplication16.numericalSortSimpleCapitalSpecialChars(str_array20);
    java.util.List list24 = sortApplication0.numericalSortStringsSimple(str_array20);
    java.lang.String[] str_array26 = new java.lang.String[] { "Output stream is null" };
    java.util.List list27 = sortApplication0.sortSimpleCapitalSpecialChars(str_array26);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication28 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication29 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication30 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array32 = new java.lang.String[] { "hi!" };
    java.lang.String str33 = commApplication30.commAllMatches(str_array32);
    java.lang.String str34 = calApplication29.printCalWithMondayFirst(str_array32);
    java.util.List list35 = sortApplication28.numericalSortSimpleCapitalSpecialChars(str_array32);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication36 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array38 = new java.lang.String[] { "hi!" };
    java.lang.String str39 = commApplication36.commAllMatches(str_array38);
    java.util.List list40 = sortApplication28.numericalSortSimpleCapitalNumber(str_array38);
    java.lang.String[] str_array42 = new java.lang.String[] { "\t" };
    java.util.List list43 = sortApplication28.sortSimpleCapital(str_array42);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication44 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication45 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication46 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array48 = new java.lang.String[] { "hi!" };
    java.lang.String str49 = commApplication46.commAllMatches(str_array48);
    java.lang.String str50 = calApplication45.printCalWithMondayFirst(str_array48);
    java.util.List list51 = sortApplication44.numericalSortSimpleCapitalSpecialChars(str_array48);
    java.util.List list52 = sortApplication28.numericalSortStringsSimple(str_array48);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication53 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication54 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication55 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array57 = new java.lang.String[] { "hi!" };
    java.lang.String str58 = commApplication55.commAllMatches(str_array57);
    java.lang.String str59 = calApplication54.printCalWithMondayFirst(str_array57);
    java.util.List list60 = sortApplication53.numericalSortSimpleCapitalSpecialChars(str_array57);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication61 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array63 = new java.lang.String[] { "hi!" };
    java.lang.String str64 = commApplication61.commAllMatches(str_array63);
    java.util.List list65 = sortApplication53.numericalSortSimpleCapitalNumber(str_array63);
    java.lang.String[] str_array67 = new java.lang.String[] { "\t" };
    java.util.List list68 = sortApplication53.sortSimpleCapital(str_array67);
    sg.edu.nus.comp.cs4218.impl.app.SortApplication sortApplication69 = new sg.edu.nus.comp.cs4218.impl.app.SortApplication();
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication70 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication71 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array73 = new java.lang.String[] { "hi!" };
    java.lang.String str74 = commApplication71.commAllMatches(str_array73);
    java.lang.String str75 = calApplication70.printCalWithMondayFirst(str_array73);
    java.util.List list76 = sortApplication69.numericalSortSimpleCapitalSpecialChars(str_array73);
    java.util.List list77 = sortApplication53.numericalSortStringsSimple(str_array73);
    java.util.List list78 = sortApplication28.numericalSortNumbers(str_array73);
    sg.edu.nus.comp.cs4218.impl.app.CalApplication calApplication79 = new sg.edu.nus.comp.cs4218.impl.app.CalApplication();
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication80 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array82 = new java.lang.String[] { "hi!" };
    java.lang.String str83 = commApplication80.commAllMatches(str_array82);
    sg.edu.nus.comp.cs4218.impl.app.CommApplication commApplication84 = new sg.edu.nus.comp.cs4218.impl.app.CommApplication();
    java.lang.String[] str_array86 = new java.lang.String[] { "hi!" };
    java.lang.String str87 = commApplication84.commAllMatches(str_array86);
    java.lang.String str88 = commApplication80.commBothMathches(str_array86);
    java.lang.String[] str_array90 = new java.lang.String[] { "File not found" };
    java.lang.String str91 = commApplication80.commOnlySecond(str_array90);
    java.lang.String str92 = calApplication79.printCalWithMondayFirst(str_array90);
    java.util.List list93 = sortApplication28.numericalSortCapitalNumbersSpecialChars(str_array90);
    java.util.List list94 = sortApplication0.numericalSortSimpleSpecialChars(str_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str5.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str6.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str11.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str21.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str22 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str22.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str33.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str34.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str39 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str39.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str49 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str49.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str50 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str50.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str58 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str58.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str59 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str59.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str64 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str64.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str74 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str74.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str75.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str83 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str83.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str87 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str87.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str88 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str88.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(str_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str91 + "' != '" + "comm: terminated with error message comm: File not found"+ "'", str91.equals("comm: terminated with error message comm: File not found"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str92 + "' != '" + "     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"+ "'", str92.equals("     March 2016\nMo Tu We Th Fr Sa Su\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list93);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(list94);

  }

}
